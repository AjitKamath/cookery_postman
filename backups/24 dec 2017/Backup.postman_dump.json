{
	"version": 1,
	"collections": [
		{
			"id": "c97db7cd-59c4-7fde-1062-52bcd198bd12",
			"name": "Cookery Health Check - MANUAL",
			"description": "",
			"order": [],
			"folders": [
				{
					"id": "01c1fc0e-6790-566d-52ad-e65605124859",
					"name": "Recipe",
					"description": "",
					"collection": "c97db7cd-59c4-7fde-1062-52bcd198bd12",
					"order": [
						"8fd4554a-9377-7cc2-1d6a-2e70f819a06c",
						"04493831-f3e5-3049-749d-ed9a8639bff7"
					],
					"owner": "833319",
					"folder": null,
					"folders_order": [],
					"lastRevision": 2757650033,
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:27.000Z",
					"updatedAt": "2017-12-07T10:55:16.000Z",
					"collection_id": "c97db7cd-59c4-7fde-1062-52bcd198bd12"
				}
			],
			"folders_order": [
				"01c1fc0e-6790-566d-52ad-e65605124859"
			],
			"timestamp": 0,
			"synced": true,
			"remote_id": "0",
			"owner": "833319",
			"sharedWithTeam": false,
			"subscribed": false,
			"remoteLink": "",
			"remoteLinkUpdatedAt": null,
			"public": false,
			"createdAt": "2017-12-07T10:36:26.000Z",
			"updatedAt": "2017-12-07T10:56:16.000Z",
			"write": true,
			"published": false,
			"favorite": false,
			"permissions": {},
			"syncedPermissions": {},
			"requests": [
				{
					"id": "04493831-f3e5-3049-749d-ed9a8639bff7",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "01c1fc0e-6790-566d-52ad-e65605124859",
					"queryParams": [],
					"preRequestScript": "postman.setEnvironmentVariable(\"id\", randomNumber(2));\r\n\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_nm",
							"value": "TEST_RECIPE_NAME - {{id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "food_csn_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "food_typ_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_steps[]",
							"value": "This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. ",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_steps[]",
							"value": "This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. \n",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_steps[]",
							"value": "This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. ",
							"description": "",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_id[]",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_id[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_nm[]",
							"value": "TEST INGREDIENT 1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_nm[]",
							"value": "TEST INGREDIENT 2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "qty_id[]",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "qty_id[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_qty[]",
							"value": "5",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_qty[]",
							"value": "6",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_id[]",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_id[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_id[]",
							"value": "3",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_qty[]",
							"value": "4",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_qty[]",
							"value": "3",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_qty[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "images[]",
							"value": {
								"0": {}
							},
							"type": "file",
							"enabled": true
						},
						{
							"key": "images[]",
							"value": {
								"0": {}
							},
							"type": "file",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_LONG\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1514127624315,
					"name": "RECIPE_SUBMIT(UPDATE)",
					"description": null,
					"collectionId": "c97db7cd-59c4-7fde-1062-52bcd198bd12",
					"responses": []
				},
				{
					"id": "8fd4554a-9377-7cc2-1d6a-2e70f819a06c",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "01c1fc0e-6790-566d-52ad-e65605124859",
					"queryParams": [],
					"preRequestScript": "postman.setEnvironmentVariable(\"id\", randomNumber(2));\r\n\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_nm",
							"value": "TEST_RECIPE_NAME - {{id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "food_csn_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "food_typ_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_steps[]",
							"value": "TEST STEP !",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_steps[]",
							"value": "TEST STEP 2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_id[]",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_id[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_nm[]",
							"value": "TEST INGREDIENT 1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_nm[]",
							"value": "TEST INGREDIENT 2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "qty_id[]",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "qty_id[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_qty[]",
							"value": "5",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_qty[]",
							"value": "6",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_id[]",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_id[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_id[]",
							"value": "3",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_qty[]",
							"value": "4",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_qty[]",
							"value": "3",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_qty[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "images[]",
							"value": null,
							"type": "file",
							"enabled": true
						},
						{
							"key": "images[]",
							"value": null,
							"type": "file",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_LONG\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1514127579407,
					"name": "RECIPE_SUBMIT(ADD)",
					"description": null,
					"collectionId": "c97db7cd-59c4-7fde-1062-52bcd198bd12",
					"responses": []
				}
			]
		},
		{
			"id": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
			"name": "Cookery Health Check - AUTO",
			"description": "",
			"order": [],
			"folders": [
				{
					"id": "4b995d8c-a88c-4261-11ba-55379a2ad771",
					"name": "Comment",
					"description": "",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"order": [
						"d3962e04-67db-fe79-7534-80a22037c325",
						"d84d8099-4310-3147-1fde-0262012e29f0",
						"0e22a8aa-7f4f-48b4-911b-497505dfbae0"
					],
					"owner": "833319",
					"folder": null,
					"folders_order": [],
					"lastRevision": 2757596118,
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:27.000Z",
					"updatedAt": "2017-12-07T10:49:54.000Z",
					"collection_id": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "9904c06b-7617-88ca-522a-e0273427e221",
					"name": "Ingredient",
					"description": "",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"order": [
						"4bca6632-7e50-cb15-cc33-d99843a46c85"
					],
					"owner": "833319",
					"folder": null,
					"folders_order": [],
					"lastRevision": 2757593818,
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:27.000Z",
					"updatedAt": "2017-12-07T10:49:41.000Z",
					"collection_id": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2851941035,
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"folder": null,
					"id": "3d7bf0b5-630c-09cb-5e60-5271dec69064",
					"name": "Like",
					"description": "",
					"variables": null,
					"auth": null,
					"events": null,
					"order": [
						"eaa1f92c-b0f2-14bc-5c75-46f9590e44ee",
						"05d4be8e-7cc4-b847-d10a-72c39225ee77",
						"4f0c7d80-65af-bc64-8389-dcf54b51c86e",
						"bacf9355-00da-d204-1ab8-2f8415418c9e",
						"247fae02-abbe-d2f1-7040-17847a5caef7",
						"e26cfd90-c079-8e1c-960e-e6ab774b0a83"
					],
					"folders_order": [],
					"createdAt": "2017-12-07T10:36:27.000Z",
					"updatedAt": "2017-12-21T07:00:57.000Z"
				},
				{
					"id": "aa37b9d4-7431-6eea-dba1-47ab81e6c9de",
					"name": "Master Data",
					"description": "",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"order": [
						"a1dab037-450c-b58f-478c-fdb4246170ef",
						"5c48ceed-e6d1-12b6-484f-09bf8120f3b8",
						"fd4383d4-d1fc-3bf1-be43-807732a826fc",
						"f9046990-eaa7-c5d2-b1b8-2f26c8b5c6e6"
					],
					"owner": "833319",
					"folder": null,
					"folders_order": [],
					"lastRevision": 2757591264,
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:27.000Z",
					"updatedAt": "2017-12-07T10:49:31.000Z",
					"collection_id": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"name": "Recipe",
					"description": "",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"order": [
						"d4683b09-e20e-ffbb-5e02-fff8c6849e06",
						"25bf02ac-9188-8ff5-f377-2d976eeb7f90",
						"8ae520b3-73c5-7b9a-0508-ef30b87c31be",
						"bc051212-62e1-6055-b9ba-f3679c103352",
						"9181adae-29a8-c7a3-6d64-ec2f1597889c",
						"d35eafc0-0057-9041-7b70-7bdbc5bbd832",
						"8a56d731-9847-fd04-32f1-c25a75e5469e"
					],
					"owner": "833319",
					"folder": null,
					"folders_order": [],
					"lastRevision": 2757650518,
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:27.000Z",
					"updatedAt": "2017-12-07T10:55:20.000Z",
					"collection_id": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2851876616,
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"folder": null,
					"id": "c560465f-402b-a0b7-2081-89457d5d0daa",
					"name": "Review",
					"description": "",
					"variables": null,
					"auth": null,
					"events": null,
					"order": [
						"5913c094-a9ca-7545-a717-dda47c4613d8",
						"5981a91c-cea0-c976-7c89-8c83cac79f70",
						"ccd2d2a2-46b0-2ab0-7550-26139f1ceafe",
						"57d7027c-cd5e-efe7-9bfd-f157f4210aa3",
						"51497504-3696-bba3-3386-e05105ef9a99"
					],
					"folders_order": [],
					"createdAt": "2017-12-07T10:36:27.000Z",
					"updatedAt": "2017-12-21T06:53:52.000Z"
				},
				{
					"id": "cfa3f69f-203d-a2d8-c479-76b7d0a649a9",
					"name": "Timeline",
					"description": "",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"order": [
						"6fa09194-832b-03d1-32f9-ab5c9e685e03"
					],
					"owner": "833319",
					"folder": null,
					"folders_order": [],
					"lastRevision": 2757595101,
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:27.000Z",
					"updatedAt": "2017-12-07T10:49:49.000Z",
					"collection_id": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "8967c77a-bad4-ecdf-54da-42117b2d19b7",
					"name": "User",
					"description": "",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"order": [
						"92561912-d0e3-cdb8-5a06-340f538a60eb",
						"1bd40a8b-c7ec-49fa-5b24-dfc57fd54026"
					],
					"owner": "833319",
					"folder": null,
					"folders_order": [],
					"lastRevision": 2757591849,
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:27.000Z",
					"updatedAt": "2017-12-07T10:49:34.000Z",
					"collection_id": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2852711934,
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"folder": null,
					"id": "c36d1d5c-33c3-cde7-076f-7a231d659cb7",
					"name": "View",
					"description": "",
					"variables": null,
					"auth": null,
					"events": null,
					"order": [
						"4eb76ff0-3196-eebe-3a7f-bd37a436441e",
						"b0acb648-91f4-e223-c227-ff077e7a8a9c"
					],
					"folders_order": [],
					"createdAt": "2017-12-07T10:36:27.000Z",
					"updatedAt": "2017-12-21T08:23:03.000Z"
				}
			],
			"folders_order": [
				"aa37b9d4-7431-6eea-dba1-47ab81e6c9de",
				"8967c77a-bad4-ecdf-54da-42117b2d19b7",
				"671fe0e0-deba-05e4-8c9b-710831c0b7bb",
				"9904c06b-7617-88ca-522a-e0273427e221",
				"c36d1d5c-33c3-cde7-076f-7a231d659cb7",
				"3d7bf0b5-630c-09cb-5e60-5271dec69064",
				"cfa3f69f-203d-a2d8-c479-76b7d0a649a9",
				"4b995d8c-a88c-4261-11ba-55379a2ad771",
				"c560465f-402b-a0b7-2081-89457d5d0daa"
			],
			"timestamp": 0,
			"synced": true,
			"remote_id": "0",
			"owner": "833319",
			"sharedWithTeam": false,
			"subscribed": false,
			"remoteLink": "",
			"remoteLinkUpdatedAt": null,
			"public": false,
			"createdAt": "2017-12-07T10:36:27.000Z",
			"updatedAt": 1514128323293,
			"write": true,
			"published": false,
			"favorite": false,
			"permissions": {},
			"syncedPermissions": {},
			"requests": [
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457035,
					"folder": "3d7bf0b5-630c-09cb-5e60-5271dec69064",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "05d4be8e-7cc4-b847-d10a-72c39225ee77",
					"name": "LIKE_SUBMIT(COMMENT)",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "LIKE_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type",
							"value": "COMMENT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type_id",
							"value": "{{com_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"isLiked\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"isLiked\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"write": true
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757587952,
					"folder": "4b995d8c-a88c-4261-11ba-55379a2ad771",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "0e22a8aa-7f4f-48b4-911b-497505dfbae0",
					"name": "COMMENT_DELETE",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "COMMENT_DELETE",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "com_id",
							"value": "{{id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"id\", randomNumber(1));\r",
									"\r",
									"function randomNumber(length) {\r",
									"  var text = \"\";\r",
									"  var possible = \"0123456789\";\r",
									"\r",
									"  for (var i = 0; i < length; i++)\r",
									"    text += possible.charAt(Math.floor(Math.random() * possible.length));\r",
									"\r",
									"  return text;\r",
									"}\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"err_message\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"if(isJson(responseBody)){",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": "postman.setEnvironmentVariable(\"id\", randomNumber(1));\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:49:11.000Z",
					"updatedAt": "2017-12-07T10:49:11.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"write": true
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457063,
					"folder": "8967c77a-bad4-ecdf-54da-42117b2d19b7",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "1bd40a8b-c7ec-49fa-5b24-dfc57fd54026",
					"name": "USER_LOGIN",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "USER_LOGIN",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "email",
							"value": "{{email}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"err_message\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"if(isJson(responseBody)){",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": "\r\n",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"write": true
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2851956295,
					"folder": "3d7bf0b5-630c-09cb-5e60-5271dec69064",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "247fae02-abbe-d2f1-7040-17847a5caef7",
					"name": "LIKE_FETCH_USERS(COMMENT)",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "LIKE_FETCH_USERS",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type",
							"value": "COMMENT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type_id",
							"value": "{{com_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"USER_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"USER_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-21T07:00:28.000Z",
					"updatedAt": "2017-12-21T07:02:07.000Z",
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"write": true
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457049,
					"folder": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "25bf02ac-9188-8ff5-f377-2d976eeb7f90",
					"name": "RECIPE_TRENDING_FETCH",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_TRENDING_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"write": true
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457031,
					"folder": "9904c06b-7617-88ca-522a-e0273427e221",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "4bca6632-7e50-cb15-cc33-d99843a46c85",
					"name": "INGREDIENT_FETCH",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "INGREDIENT_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "search_query",
							"value": "ER",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"ING_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"ING_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"write": true
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457066,
					"folder": "c36d1d5c-33c3-cde7-076f-7a231d659cb7",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "4eb76ff0-3196-eebe-3a7f-bd37a436441e",
					"name": "VIEW_RECIPE_FETCH",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "VIEW_RECIPE_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"USER_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"USER_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"write": true
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457037,
					"folder": "3d7bf0b5-630c-09cb-5e60-5271dec69064",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "4f0c7d80-65af-bc64-8389-dcf54b51c86e",
					"name": "LIKE_SUBMIT(REVIEW)",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "LIKE_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type",
							"value": "REVIEW",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type_id",
							"value": "{{rev_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"isLiked\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"isLiked\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"write": true
				},
				{
					"id": "51497504-3696-bba3-3386-e05105ef9a99",
					"owner": "833319",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "c560465f-402b-a0b7-2081-89457d5d0daa",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "REVIEW_RECIPE_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"REV_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"time": 1513448774214,
					"name": "REVIEW_RECIPE_FETCH",
					"description": null,
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"responses": [],
					"isFromCollection": true,
					"collectionRequestId": "51497504-3696-bba3-3386-e05105ef9a99",
					"lastUpdatedBy": "833319",
					"lastRevision": 2826544415,
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"REV_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"variables": null,
					"createdAt": "2017-12-16T10:07:47.000Z",
					"updatedAt": "2017-12-18T09:17:46.000Z"
				},
				{
					"id": "57d7027c-cd5e-efe7-9bfd-f157f4210aa3",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "c560465f-402b-a0b7-2081-89457d5d0daa",
					"queryParams": [],
					"preRequestScript": "postman.setEnvironmentVariable(\"id\", randomNumber(2));\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "REVIEW_DELETE",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rev_id",
							"value": "{{id}}",
							"description": "",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1513490012095,
					"name": "REVIEW_DELETE",
					"description": null,
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"responses": []
				},
				{
					"id": "5913c094-a9ca-7545-a717-dda47c4613d8",
					"owner": "833319",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "c560465f-402b-a0b7-2081-89457d5d0daa",
					"queryParams": [],
					"preRequestScript": "postman.setEnvironmentVariable(\"id\", randomNumber(2));\r\n\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "REVIEW_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "review",
							"value": "TEST REVIEW - {{id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rating",
							"value": "3",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"isReviewed\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"time": 1513449600127,
					"name": "REVIEW_SUBMIT",
					"description": null,
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"responses": [],
					"isFromCollection": true,
					"collectionRequestId": "5913c094-a9ca-7545-a717-dda47c4613d8",
					"lastUpdatedBy": "833319",
					"lastRevision": 2829409708,
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"auth": null,
					"events": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"id\", randomNumber(2));\r",
									"\r",
									"\r",
									"function randomNumber(length) {\r",
									"  var text = \"\";\r",
									"  var possible = \"0123456789\";\r",
									"\r",
									"  for (var i = 0; i < length; i++)\r",
									"    text += possible.charAt(Math.floor(Math.random() * possible.length));\r",
									"\r",
									"  return text;\r",
									"}\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"isReviewed\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"variables": null,
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-18T14:38:46.000Z"
				},
				{
					"id": "5981a91c-cea0-c976-7c89-8c83cac79f70",
					"owner": "833319",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "c560465f-402b-a0b7-2081-89457d5d0daa",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "REVIEW_USER_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"REV_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"time": 1513512776651,
					"name": "REVIEW_USER_FETCH",
					"description": null,
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"responses": [],
					"lastUpdatedBy": "833319",
					"lastRevision": 2826431886,
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"REV_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"variables": null,
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-18T09:06:25.000Z"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457043,
					"folder": "aa37b9d4-7431-6eea-dba1-47ab81e6c9de",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "5c48ceed-e6d1-12b6-484f-09bf8120f3b8",
					"name": "FOOD_CUISINE_FETCH_ALL",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "FOOD_CUISINE_FETCH_ALL",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"FOOD_CSN_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"FOOD_CSN_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n\n\n\n",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"write": true
				},
				{
					"id": "6fa09194-832b-03d1-32f9-ab5c9e685e03",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "cfa3f69f-203d-a2d8-c479-76b7d0a649a9",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "TIMELINE_USER_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"description": "",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"TMLN_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1514128329581,
					"name": "TIMELINE_USER_FETCH",
					"description": null,
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"responses": []
				},
				{
					"id": "8a56d731-9847-fd04-32f1-c25a75e5469e",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"queryParams": [],
					"preRequestScript": "postman.setEnvironmentVariable(\"id\", randomNumber(2));\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_DELETE",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1513460489707,
					"name": "RECIPE_DELETE",
					"description": null,
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"responses": []
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457050,
					"folder": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "8ae520b3-73c5-7b9a-0508-ef30b87c31be",
					"name": "RECIPE_FAVORITE_FETCH",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_FAVORITE_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"write": true
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457051,
					"folder": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "9181adae-29a8-c7a3-6d64-ec2f1597889c",
					"name": "RECIPE_USER_VIEWED_FETCH",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_USER_VIEWED_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"write": true
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457065,
					"folder": "8967c77a-bad4-ecdf-54da-42117b2d19b7",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "92561912-d0e3-cdb8-5a06-340f538a60eb",
					"name": "USER_REGISTER",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "USER_REGISTER",
							"type": "text",
							"enabled": true
						},
						{
							"key": "mobile",
							"value": "{{mobile}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "name",
							"value": "Test User",
							"type": "text",
							"enabled": true
						},
						{
							"key": "gender",
							"value": "M",
							"type": "text",
							"enabled": true
						},
						{
							"key": "email",
							"value": "{{email}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"mobile\", randomNumber(10));\r",
									"postman.setEnvironmentVariable(\"email\", randomString(10)+\"@gmail.com\");\r",
									"postman.setEnvironmentVariable(\"password\", randomString(10));\r",
									"\r",
									"function randomString(length) {\r",
									"  var text = \"\";\r",
									"  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r",
									"\r",
									"  for (var i = 0; i < length; i++)\r",
									"    text += possible.charAt(Math.floor(Math.random() * possible.length));\r",
									"\r",
									"  return text;\r",
									"}\r",
									"\r",
									"function randomNumber(length) {\r",
									"  var text = \"\";\r",
									"  var possible = \"0123456789\";\r",
									"\r",
									"  for (var i = 0; i < length; i++)\r",
									"    text += possible.charAt(Math.floor(Math.random() * possible.length));\r",
									"\r",
									"  return text;\r",
									"}\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"err_message\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"if(isJson(responseBody)){",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": "postman.setEnvironmentVariable(\"mobile\", randomNumber(10));\r\npostman.setEnvironmentVariable(\"email\", randomString(10)+\"@gmail.com\");\r\npostman.setEnvironmentVariable(\"password\", randomString(10));\r\n\r\nfunction randomString(length) {\r\n  var text = \"\";\r\n  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"write": true
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457045,
					"folder": "aa37b9d4-7431-6eea-dba1-47ab81e6c9de",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "a1dab037-450c-b58f-478c-fdb4246170ef",
					"name": "QUANTITY_FETCH_ALL",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "QUANTITY_FETCH_ALL",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"QTY_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"QTY_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n\n\n\n",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"write": true
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2852722474,
					"folder": "c36d1d5c-33c3-cde7-076f-7a231d659cb7",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "b0acb648-91f4-e223-c227-ff077e7a8a9c",
					"name": "VIEW_FETCH_USERS",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "VIEW_FETCH_USERS",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"USER_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"USER_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-21T08:23:02.000Z",
					"updatedAt": "2017-12-21T08:24:06.000Z",
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"write": true
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2851935118,
					"folder": "3d7bf0b5-630c-09cb-5e60-5271dec69064",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "bacf9355-00da-d204-1ab8-2f8415418c9e",
					"name": "LIKE_FETCH_USERS(RECIPE)",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "LIKE_FETCH_USERS",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type",
							"value": "RECIPE",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"USER_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"USER_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-21T06:53:46.000Z",
					"updatedAt": "2017-12-21T07:00:21.000Z",
					"write": true,
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "bc051212-62e1-6055-b9ba-f3679c103352",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_USER_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1513460552243,
					"name": "RECIPE_USER_FETCH",
					"description": null,
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"responses": []
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457059,
					"folder": "c560465f-402b-a0b7-2081-89457d5d0daa",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "ccd2d2a2-46b0-2ab0-7550-26139f1ceafe",
					"name": "REVIEW_RECIPE_AVG_RATING",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "REVIEW_RECIPE_AVG_RATING",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RATING\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RATING\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"write": true
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457054,
					"folder": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "d35eafc0-0057-9041-7b70-7bdbc5bbd832",
					"name": "RECIPE_USER_REVIEWED_FETCH",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_USER_REVIEWED_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"write": true
				},
				{
					"id": "d3962e04-67db-fe79-7534-80a22037c325",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2829347090,
					"folder": "4b995d8c-a88c-4261-11ba-55379a2ad771",
					"name": "COMMENT_SUBMIT",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "COMMENT_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "comment",
							"value": "TEST COMMENT-{{id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"id\", randomNumber(2));\r",
									"\r",
									"\r",
									"function randomNumber(length) {\r",
									"  var text = \"\";\r",
									"  var possible = \"0123456789\";\r",
									"\r",
									"  for (var i = 0; i < length; i++)\r",
									"    text += possible.charAt(Math.floor(Math.random() * possible.length));\r",
									"\r",
									"  return text;\r",
									"}\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"err_message\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"if(isJson(responseBody)){",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": "postman.setEnvironmentVariable(\"id\", randomNumber(2));\r\n\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-18T14:31:13.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"write": true,
					"isFromCollection": true,
					"collectionRequestId": "d3962e04-67db-fe79-7534-80a22037c325",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457055,
					"folder": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "d4683b09-e20e-ffbb-5e02-fff8c6849e06",
					"name": "RECIPE_FETCH",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"write": true
				},
				{
					"id": "d84d8099-4310-3147-1fde-0262012e29f0",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "4b995d8c-a88c-4261-11ba-55379a2ad771",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "COMMENT_RECIPE_FETCH_ALL",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"description": "",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"description": "",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"USER_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1513534632909,
					"name": "COMMENT_RECIPE_FETCH_ALL",
					"description": null,
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"responses": []
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2851957486,
					"folder": "3d7bf0b5-630c-09cb-5e60-5271dec69064",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "e26cfd90-c079-8e1c-960e-e6ab774b0a83",
					"name": "LIKE_FETCH_USERS(REVIEW)",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "LIKE_FETCH_USERS",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type",
							"value": "REVIEW",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type_id",
							"value": "{{rev_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"USER_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"USER_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-21T07:00:56.000Z",
					"updatedAt": "2017-12-21T07:02:15.000Z",
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"write": true
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457039,
					"folder": "3d7bf0b5-630c-09cb-5e60-5271dec69064",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "eaa1f92c-b0f2-14bc-5c75-46f9590e44ee",
					"name": "LIKE_SUBMIT(RECIPE)",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "LIKE_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type",
							"value": "RECIPE",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"isLiked\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"isLiked\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"write": true
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457046,
					"folder": "aa37b9d4-7431-6eea-dba1-47ab81e6c9de",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "f9046990-eaa7-c5d2-b1b8-2f26c8b5c6e6",
					"name": "TASTE_FETCH_ALL",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "TASTE_FETCH_ALL",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"TST_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"TST_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n\n\n\n",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"write": true
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457047,
					"folder": "aa37b9d4-7431-6eea-dba1-47ab81e6c9de",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "fd4383d4-d1fc-3bf1-be43-807732a826fc",
					"name": "FOOD_TYPE_FETCH_ALL",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "FOOD_TYPE_FETCH_ALL",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"FOOD_TYP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"FOOD_TYP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n\n\n\n",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"write": true
				}
			]
		}
	],
	"environments": [
		{
			"id": "48711395-8e76-7bb0-1dca-e1533fbf87dc",
			"name": "Cookery Environment",
			"values": [
				{
					"enabled": true,
					"key": "RESPONSE_TIME_SHORT",
					"value": "1000",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "RESPONSE_TIME_MEDIUM",
					"value": "5000",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "RESPONSE_TIME_LONG",
					"value": "10000",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "STATUS_CODE",
					"value": "200",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "URL",
					"value": "http://cookery_php-ajitkamathk452607.codeanyapp.com/",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "DB_INDEX",
					"value": "0",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "mobile",
					"value": "0182983869",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "email",
					"value": "u1STMAbyKf@gmail.com",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "password",
					"value": "u3NKVOujK4",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "user_id",
					"value": "1",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "rcp_id",
					"value": "103",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "com_id",
					"value": "9",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "rev_id",
					"value": "9",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "tmln_id",
					"value": "1",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "id",
					"value": "7",
					"type": "text"
				}
			],
			"team": null,
			"timestamp": 1513958784861
		}
	],
	"headerPresets": [],
	"globals": [
		{
			"key": "variable_key",
			"type": "text",
			"value": "variable_value",
			"enabled": true
		}
	]
}