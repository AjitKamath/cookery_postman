{
	"version": 1,
	"collections": [
		{
			"id": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
			"name": "Postman Echo",
			"description": "Postman Echo is service you can use to test your REST clients and make sample API calls. It provides endpoints for `GET`, `POST`, `PUT`, various auth mechanisms and other utility endpoints.\n\nThe documentation for the endpoints as well as example responses can be found at [https://postman-echo.com](https://postman-echo.com/?source=echo-collection-app-onboarding)",
			"order": [],
			"folders": [
				{
					"owner": 0,
					"lastUpdatedBy": "631643",
					"lastRevision": 277278520,
					"id": "09ddd67c-13fe-4626-8dd4-fc64f1fc27b7",
					"name": "Auth: Digest",
					"description": "Digest authentication protects an endpoint with a username and password without actually transmitting the password over network.\nOne has to apply a hash function (like MD5, etc) to the username and password before sending them over the network.\n\n> Username: `postman`\n>\n> Password: `password`\n\nUnlike Basic-Auth, authentication happens using two consecutive requests where the first request returns `401 Unauthorised` along with `WWW-Authenticate` header containing information that needs to be used to authenticate subsequent calls.\n\nTo know more about digest authentication, refer to the [Digest Access Authentication](https://en.wikipedia.org/wiki/Digest_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#digest-auth) elaborates how to use the same within the Postman app.",
					"order": [
						"70ed7920-ead1-2d20-645a-c716ab0fd137",
						"a4c04e32-72cf-0475-07dc-89c23f85cf0c"
					],
					"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
				},
				{
					"owner": 0,
					"lastUpdatedBy": "631643",
					"lastRevision": 277278516,
					"id": "df815c41-a76b-4b5b-7129-ea59275f254b",
					"name": "Auth: Others",
					"description": "",
					"order": [
						"42c867ca-e72b-3307-169b-26a478b00641",
						"2f79ab5b-9029-56c2-7b05-52047790d670",
						"843acf02-a33c-c4bb-d742-c07b9212e4b0"
					],
					"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
				},
				{
					"owner": 0,
					"lastUpdatedBy": "631643",
					"lastRevision": 441378992,
					"id": "37368024-f6a8-0f70-85fc-7e876cde9e33",
					"name": "Cookies",
					"description": "The cookie related endpoints allow one to get, set and delete simple cookies.\n\nCookies are small snippets of information that is stored in the browser and sent back to the server with every subsequent requests in order to store useful information between requests.\nIf you want to know more about cookies, read the [HTTP Cookie](https://en.wikipedia.org/wiki/HTTP_cookie) article on wikipedia.",
					"order": [
						"3de3b135-b3cc-3a68-ba27-b6d373e03c8c",
						"8dc08eee-a543-7c1c-297f-b0b7040c35c6",
						"a4f24593-448b-88de-963f-eeb952d38a57"
					],
					"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
				},
				{
					"owner": 0,
					"lastUpdatedBy": "631643",
					"lastRevision": 441378915,
					"id": "5d3595b3-5e8e-9e33-05ed-855c77298e4e",
					"name": "Headers",
					"description": "The following set of endpoints allow one to see the headers being sent as part of a request and to get a custom set of headers as part of response.\n\nHTTP header fields provide required information about the request or response, or about the object sent in the message body. Both request headers and response headers can be controlled using these endpoints.",
					"order": [
						"da16c006-6293-c1fe-ea42-e9ba8a5e68b1",
						"e50f9111-3a52-a325-47f1-fc702bea1fff"
					],
					"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
				},
				{
					"owner": 0,
					"lastUpdatedBy": "631643",
					"lastRevision": 928381292,
					"id": "9a4c3bce-30f7-a496-c9ec-78afecbf1545",
					"name": "Request Methods",
					"description": "HTTP has multiple request \"verbs\", such as `GET`, `PUT`, `POST`, `DELETE`,\n`PATCH`, `HEAD`, etc. \n\nAn HTTP Method (verb) defines how a request should be interpreted by a server. \nThe endpoints in this section demonstrate various HTTP Verbs. Postman supports \nall the HTTP Verbs, including some rarely used ones, such as `PROPFIND`, `UNLINK`, \netc.\n\nFor details about HTTP Verbs, refer to [RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9)\n",
					"order": [
						"078883ea-ac9e-842e-8f41-784b59a33722",
						"1eb1cf9d-2be7-4060-f554-73cd13940174",
						"083e46e7-53ea-87b1-8104-f8917ce58a17",
						"12c51acc-50d2-2d9b-10d6-cc80e3a10d70",
						"8c53212f-42cd-cb37-6e02-08c47a7c8bb1",
						"1f0fad16-6bff-5130-2056-7f4af6b18912"
					],
					"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
				},
				{
					"owner": 0,
					"lastUpdatedBy": "631643",
					"lastRevision": 928389557,
					"id": "930f54b4-c5cd-2363-7cf5-b9022d3c0aae",
					"name": "Utilities",
					"description": "",
					"order": [
						"6cfd22d8-26cc-7d3e-cf50-16d400211a76",
						"159a89e2-110d-0785-9dd7-9e73b2d6878b",
						"0189572f-509e-efe0-686d-eed4b3d2f1f0",
						"154510d1-65a8-a2d0-f157-aa2c694d7be7",
						"fd961ad0-ab24-68d8-4be5-573e8585d526",
						"5d3b31c0-fa26-ee03-5c1b-3715825d811d",
						"39a204d5-944a-59d3-2dfe-90fd378cc3da"
					],
					"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
				},
				{
					"owner": 0,
					"lastUpdatedBy": "631643",
					"lastRevision": 928398965,
					"id": "74a8adf0-4f3f-068a-7c35-9745aa7b57d1",
					"name": "Utilities / Date and Time",
					"description": "A set of `/time/*` mounted requests to perform date-time manipulations, among other operations.\n",
					"order": [
						"2881587c-bd9f-0ed1-7c31-525e4ed5306c",
						"54dfe6f2-5887-1078-1f3c-3cf36acc648e",
						"c38e8be7-1739-2108-1804-a8b171c75298",
						"f922a99e-6e96-ded7-ac6f-3ca6f958987d",
						"4cef08e8-75d3-2a31-e703-115cf976e75e",
						"b4a2e234-3b0c-1a3e-14f8-5cafd567ee08",
						"4dc695e5-6b1e-1edf-c68d-014139c59d7e",
						"e8a83301-4e86-1e6c-e88c-2cbedc1524d6",
						"b709b99c-3347-40fc-2c21-98ceb7f9e267",
						"47f089f3-196e-fb13-fdf6-1d62f85ad96f",
						"8cc2e733-7e68-8ad8-efd1-5393510a300a",
						"1ef02347-9a4d-5d6a-1b75-144dd6de641f"
					],
					"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
				},
				{
					"owner": 0,
					"lastUpdatedBy": "631643",
					"lastRevision": 928442464,
					"id": "084b21bd-d250-180b-5ed8-94cfaca39fdd",
					"name": "Utilities / Postman Collection",
					"description": "",
					"order": [
						"fffc59d5-1e2d-ccc8-2101-2f7b9216be40",
						"dc8d6e30-c1cf-9d98-4b95-fc1ca6196511"
					],
					"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
				}
			],
			"folders_order": [
				"09ddd67c-13fe-4626-8dd4-fc64f1fc27b7",
				"df815c41-a76b-4b5b-7129-ea59275f254b",
				"37368024-f6a8-0f70-85fc-7e876cde9e33",
				"5d3595b3-5e8e-9e33-05ed-855c77298e4e",
				"9a4c3bce-30f7-a496-c9ec-78afecbf1545",
				"930f54b4-c5cd-2363-7cf5-b9022d3c0aae",
				"74a8adf0-4f3f-068a-7c35-9745aa7b57d1",
				"084b21bd-d250-180b-5ed8-94cfaca39fdd"
			],
			"timestamp": 0,
			"synced": true,
			"remote_id": 0,
			"owner": "833319",
			"subscribed": false,
			"remoteLink": "",
			"remoteLinkUpdatedAt": null,
			"public": false,
			"createdAt": 1514146647240,
			"updatedAt": 1514146647240,
			"write": true,
			"published": false,
			"favorite": false,
			"permissions": {},
			"syncedPermissions": {},
			"requests": []
		},
		{
			"owner": "833319",
			"lastUpdatedBy": "833319",
			"lastRevision": 2757659472,
			"team": null,
			"id": "c97db7cd-59c4-7fde-1062-52bcd198bd12",
			"name": "Cookery Health Check - MANUAL",
			"description": "",
			"variables": null,
			"auth": null,
			"events": null,
			"remote_id": "0",
			"remoteLink": "",
			"folders_order": [
				"01c1fc0e-6790-566d-52ad-e65605124859"
			],
			"order": [],
			"shared": false,
			"write": true,
			"createdAt": "2017-12-07T10:36:26.000Z",
			"updatedAt": "2017-12-24T15:00:24.000Z",
			"folders": [
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757650033,
					"collection": "c97db7cd-59c4-7fde-1062-52bcd198bd12",
					"folder": null,
					"id": "01c1fc0e-6790-566d-52ad-e65605124859",
					"name": "Recipe",
					"description": "",
					"variables": null,
					"auth": null,
					"events": null,
					"order": [
						"8fd4554a-9377-7cc2-1d6a-2e70f819a06c",
						"04493831-f3e5-3049-749d-ed9a8639bff7"
					],
					"folders_order": [],
					"createdAt": "2017-12-07T10:36:27.000Z",
					"updatedAt": "2017-12-07T10:55:16.000Z"
				}
			],
			"favorite": false,
			"subscribed": false,
			"sharedWithTeam": false,
			"hasRequests": true,
			"synced": true,
			"published": false,
			"requests": [
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2867831983,
					"folder": "01c1fc0e-6790-566d-52ad-e65605124859",
					"collection": "c97db7cd-59c4-7fde-1062-52bcd198bd12",
					"id": "04493831-f3e5-3049-749d-ed9a8639bff7",
					"name": "RECIPE_SUBMIT(UPDATE)",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_nm",
							"value": "TEST_RECIPE_NAME - {{id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "food_csn_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "food_typ_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_steps[]",
							"value": "This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. This is a step 1. ",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_steps[]",
							"value": "This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. This is a step 2. \n",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_steps[]",
							"value": "This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. This is a step 3. ",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_id[]",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_id[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_nm[]",
							"value": "TEST INGREDIENT 1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_nm[]",
							"value": "TEST INGREDIENT 2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "qty_id[]",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "qty_id[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_qty[]",
							"value": "5",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_qty[]",
							"value": "6",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_id[]",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_id[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_id[]",
							"value": "3",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_qty[]",
							"value": "4",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_qty[]",
							"value": "3",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_qty[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "images[]",
							"value": {
								"0": {
									"name": "Screenshot from 2017-12-02 20-31-10.png",
									"path": "/home/ajit/Pictures/Screenshot from 2017-12-02 20-31-10.png",
									"lastModified": 1512226871333,
									"lastModifiedDate": "2017-12-02T15:01:11.333Z",
									"webkitRelativePath": "",
									"size": 240270,
									"type": "image/png"
								},
								"length": 1
							},
							"type": "file",
							"enabled": true
						},
						{
							"key": "images[]",
							"value": {
								"0": {
									"name": "Screenshot from 2017-12-15 23-12-31.png",
									"path": "/home/ajit/Pictures/Screenshot from 2017-12-15 23-12-31.png",
									"lastModified": 1513359752465,
									"lastModifiedDate": "2017-12-15T17:42:32.465Z",
									"webkitRelativePath": "",
									"size": 3047683,
									"type": "image/png"
								},
								"length": 1
							},
							"type": "file",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"id\", randomNumber(2));\r",
									"\r",
									"\r",
									"function randomNumber(length) {\r",
									"  var text = \"\";\r",
									"  var possible = \"0123456789\";\r",
									"\r",
									"  for (var i = 0; i < length; i++)\r",
									"    text += possible.charAt(Math.floor(Math.random() * possible.length));\r",
									"\r",
									"  return text;\r",
									"}\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_LONG\"));",
									"var STRING = \"err_message\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"if(isJson(responseBody)){",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": "postman.setEnvironmentVariable(\"id\", randomNumber(2));\r\n\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_LONG\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:27.000Z",
					"updatedAt": "2017-12-24T15:00:24.000Z",
					"responses": [],
					"collectionId": "c97db7cd-59c4-7fde-1062-52bcd198bd12"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2867830869,
					"folder": "01c1fc0e-6790-566d-52ad-e65605124859",
					"collection": "c97db7cd-59c4-7fde-1062-52bcd198bd12",
					"id": "8fd4554a-9377-7cc2-1d6a-2e70f819a06c",
					"name": "RECIPE_SUBMIT(ADD)",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_nm",
							"value": "TEST_RECIPE_NAME - {{id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "food_csn_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "food_typ_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_steps[]",
							"value": "TEST STEP !",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_steps[]",
							"value": "TEST STEP 2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_id[]",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_id[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_nm[]",
							"value": "TEST INGREDIENT 1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_nm[]",
							"value": "TEST INGREDIENT 2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "qty_id[]",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "qty_id[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_qty[]",
							"value": "5",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_qty[]",
							"value": "6",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_id[]",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_id[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_id[]",
							"value": "3",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_qty[]",
							"value": "4",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_qty[]",
							"value": "3",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_qty[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "images[]",
							"value": null,
							"type": "file",
							"enabled": true
						},
						{
							"key": "images[]",
							"value": null,
							"type": "file",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"id\", randomNumber(2));\r",
									"\r",
									"\r",
									"function randomNumber(length) {\r",
									"  var text = \"\";\r",
									"  var possible = \"0123456789\";\r",
									"\r",
									"  for (var i = 0; i < length; i++)\r",
									"    text += possible.charAt(Math.floor(Math.random() * possible.length));\r",
									"\r",
									"  return text;\r",
									"}\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_LONG\"));",
									"var STRING = \"err_message\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"if(isJson(responseBody)){",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": "postman.setEnvironmentVariable(\"id\", randomNumber(2));\r\n\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_LONG\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:27.000Z",
					"updatedAt": "2017-12-24T14:59:39.000Z",
					"responses": [],
					"collectionId": "c97db7cd-59c4-7fde-1062-52bcd198bd12"
				}
			]
		},
		{
			"id": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
			"name": "Cookery Health Check - AUTO",
			"description": "",
			"order": [],
			"folders": [
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2851941035,
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"folder": null,
					"id": "3d7bf0b5-630c-09cb-5e60-5271dec69064",
					"name": "Like",
					"description": "",
					"variables": null,
					"auth": null,
					"events": null,
					"order": [
						"eaa1f92c-b0f2-14bc-5c75-46f9590e44ee",
						"05d4be8e-7cc4-b847-d10a-72c39225ee77",
						"4f0c7d80-65af-bc64-8389-dcf54b51c86e",
						"bacf9355-00da-d204-1ab8-2f8415418c9e",
						"247fae02-abbe-d2f1-7040-17847a5caef7",
						"e26cfd90-c079-8e1c-960e-e6ab774b0a83"
					],
					"folders_order": [],
					"createdAt": "2017-12-07T10:36:27.000Z",
					"updatedAt": "2017-12-21T07:00:57.000Z"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757596118,
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"folder": null,
					"id": "4b995d8c-a88c-4261-11ba-55379a2ad771",
					"name": "Comment",
					"description": "",
					"variables": null,
					"auth": null,
					"events": null,
					"order": [
						"d3962e04-67db-fe79-7534-80a22037c325",
						"d84d8099-4310-3147-1fde-0262012e29f0",
						"0e22a8aa-7f4f-48b4-911b-497505dfbae0"
					],
					"folders_order": [],
					"createdAt": "2017-12-07T10:36:27.000Z",
					"updatedAt": "2017-12-07T10:49:54.000Z"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2873582699,
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"folder": null,
					"id": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"name": "Recipe",
					"description": "",
					"variables": null,
					"auth": null,
					"events": null,
					"order": [
						"d4683b09-e20e-ffbb-5e02-fff8c6849e06",
						"25bf02ac-9188-8ff5-f377-2d976eeb7f90",
						"8ae520b3-73c5-7b9a-0508-ef30b87c31be",
						"bc051212-62e1-6055-b9ba-f3679c103352",
						"9181adae-29a8-c7a3-6d64-ec2f1597889c",
						"d35eafc0-0057-9041-7b70-7bdbc5bbd832",
						"8a56d731-9847-fd04-32f1-c25a75e5469e",
						"d0a95581-d78c-f209-e432-cb8ea3d7c4e7"
					],
					"folders_order": [],
					"createdAt": "2017-12-07T10:36:27.000Z",
					"updatedAt": "2017-12-26T08:24:14.000Z"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2879033978,
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"folder": null,
					"id": "8967c77a-bad4-ecdf-54da-42117b2d19b7",
					"name": "User",
					"description": "",
					"variables": null,
					"auth": null,
					"events": null,
					"order": [
						"92561912-d0e3-cdb8-5a06-340f538a60eb",
						"1bd40a8b-c7ec-49fa-5b24-dfc57fd54026",
						"883c2b9d-5866-61cc-9183-5c4747f3dba8",
						"3eb57e17-fd81-768a-f0f7-358aad16b26c",
						"69289aa1-8c33-5df0-2ee7-39a2fa9df916",
						"a1a35ca6-4c63-4d51-e99f-1229ada6c211",
						"53f99a93-4b98-43c8-33c0-5beff4ffa8c1",
						"18c7277d-f890-206c-a715-ef0a936f8866",
						"bdeaeafa-a5db-ca83-9b76-55f0cfb7737f",
						"db2febea-2f95-4792-617b-076eca1530a5"
					],
					"folders_order": [],
					"createdAt": "2017-12-07T10:36:27.000Z",
					"updatedAt": "2017-12-27T07:17:03.000Z",
					"collection_id": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2873582719,
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"folder": null,
					"id": "9904c06b-7617-88ca-522a-e0273427e221",
					"name": "Ingredient",
					"description": "",
					"variables": null,
					"auth": null,
					"events": null,
					"order": [
						"4bca6632-7e50-cb15-cc33-d99843a46c85"
					],
					"folders_order": [],
					"createdAt": "2017-12-07T10:36:27.000Z",
					"updatedAt": "2017-12-26T08:24:14.000Z"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757591264,
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"folder": null,
					"id": "aa37b9d4-7431-6eea-dba1-47ab81e6c9de",
					"name": "Master Data",
					"description": "",
					"variables": null,
					"auth": null,
					"events": null,
					"order": [
						"a1dab037-450c-b58f-478c-fdb4246170ef",
						"5c48ceed-e6d1-12b6-484f-09bf8120f3b8",
						"fd4383d4-d1fc-3bf1-be43-807732a826fc",
						"f9046990-eaa7-c5d2-b1b8-2f26c8b5c6e6"
					],
					"folders_order": [],
					"createdAt": "2017-12-07T10:36:27.000Z",
					"updatedAt": "2017-12-07T10:49:31.000Z"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2852711934,
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"folder": null,
					"id": "c36d1d5c-33c3-cde7-076f-7a231d659cb7",
					"name": "View",
					"description": "",
					"variables": null,
					"auth": null,
					"events": null,
					"order": [
						"4eb76ff0-3196-eebe-3a7f-bd37a436441e",
						"b0acb648-91f4-e223-c227-ff077e7a8a9c"
					],
					"folders_order": [],
					"createdAt": "2017-12-07T10:36:27.000Z",
					"updatedAt": "2017-12-21T08:23:03.000Z"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2851876616,
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"folder": null,
					"id": "c560465f-402b-a0b7-2081-89457d5d0daa",
					"name": "Review",
					"description": "",
					"variables": null,
					"auth": null,
					"events": null,
					"order": [
						"5913c094-a9ca-7545-a717-dda47c4613d8",
						"5981a91c-cea0-c976-7c89-8c83cac79f70",
						"ccd2d2a2-46b0-2ab0-7550-26139f1ceafe",
						"57d7027c-cd5e-efe7-9bfd-f157f4210aa3",
						"51497504-3696-bba3-3386-e05105ef9a99"
					],
					"folders_order": [],
					"createdAt": "2017-12-07T10:36:27.000Z",
					"updatedAt": "2017-12-21T06:53:52.000Z"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2867844748,
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"folder": null,
					"id": "cfa3f69f-203d-a2d8-c479-76b7d0a649a9",
					"name": "Timeline",
					"description": "",
					"variables": null,
					"auth": null,
					"events": null,
					"order": [
						"6fa09194-832b-03d1-32f9-ab5c9e685e03"
					],
					"folders_order": [],
					"createdAt": "2017-12-07T10:36:27.000Z",
					"updatedAt": "2017-12-24T15:12:03.000Z"
				}
			],
			"folders_order": [
				"aa37b9d4-7431-6eea-dba1-47ab81e6c9de",
				"8967c77a-bad4-ecdf-54da-42117b2d19b7",
				"671fe0e0-deba-05e4-8c9b-710831c0b7bb",
				"9904c06b-7617-88ca-522a-e0273427e221",
				"c36d1d5c-33c3-cde7-076f-7a231d659cb7",
				"3d7bf0b5-630c-09cb-5e60-5271dec69064",
				"cfa3f69f-203d-a2d8-c479-76b7d0a649a9",
				"4b995d8c-a88c-4261-11ba-55379a2ad771",
				"c560465f-402b-a0b7-2081-89457d5d0daa"
			],
			"timestamp": 0,
			"synced": true,
			"remote_id": "0",
			"owner": "833319",
			"sharedWithTeam": false,
			"subscribed": false,
			"remoteLink": "",
			"remoteLinkUpdatedAt": null,
			"public": false,
			"createdAt": "2017-12-07T10:36:27.000Z",
			"updatedAt": "2018-01-01T08:57:37.489Z",
			"write": true,
			"published": false,
			"favorite": false,
			"permissions": {},
			"syncedPermissions": {},
			"requests": [
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457035,
					"folder": "3d7bf0b5-630c-09cb-5e60-5271dec69064",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "05d4be8e-7cc4-b847-d10a-72c39225ee77",
					"name": "LIKE_SUBMIT(COMMENT)",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "LIKE_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type",
							"value": "COMMENT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type_id",
							"value": "{{com_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"isLiked\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"isLiked\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "0e22a8aa-7f4f-48b4-911b-497505dfbae0",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "4b995d8c-a88c-4261-11ba-55379a2ad771",
					"queryParams": [],
					"preRequestScript": "postman.setEnvironmentVariable(\"id\", randomNumber(1));\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "COMMENT_DELETE",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "com_id",
							"value": "{{com_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1514478687224,
					"name": "COMMENT_DELETE",
					"description": null,
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"responses": []
				},
				{
					"id": "18c7277d-f890-206c-a715-ef0a936f8866",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "8967c77a-bad4-ecdf-54da-42117b2d19b7",
					"queryParams": [],
					"preRequestScript": "postman.setEnvironmentVariable(\"phone\", randomNumber(10));\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "USER_UPDATE_PHONE",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "mobile",
							"value": "{{phone}}",
							"description": "",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"EMAIL\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1514785586909,
					"name": "USER_UPDATE_PHONE",
					"description": null,
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "1bd40a8b-c7ec-49fa-5b24-dfc57fd54026",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "8967c77a-bad4-ecdf-54da-42117b2d19b7",
					"queryParams": [],
					"preRequestScript": "\r\n",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "USER_LOGIN",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "COOKERY1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "email",
							"value": "{{email}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"USER_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1514706915988,
					"name": "USER_LOGIN",
					"description": null,
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"responses": []
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2851956295,
					"folder": "3d7bf0b5-630c-09cb-5e60-5271dec69064",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "247fae02-abbe-d2f1-7040-17847a5caef7",
					"name": "LIKE_FETCH_USERS(COMMENT)",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "LIKE_FETCH_USERS",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type",
							"value": "COMMENT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type_id",
							"value": "{{com_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"USER_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"USER_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-21T07:00:28.000Z",
					"updatedAt": "2017-12-21T07:02:07.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457049,
					"folder": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "25bf02ac-9188-8ff5-f377-2d976eeb7f90",
					"name": "RECIPE_TRENDING_FETCH",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_TRENDING_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "3eb57e17-fd81-768a-f0f7-358aad16b26c",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2886732606,
					"folder": "8967c77a-bad4-ecdf-54da-42117b2d19b7",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"name": "USER_FOLLOW_SUBMIT",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "USER_FOLLOW_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "flwr_user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "flws_user_id",
							"value": "3",
							"description": "",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"isFollowing\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": "\r\n",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"isFollowing\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-27T07:17:03.000Z",
					"updatedAt": "2017-12-28T09:35:51.000Z",
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"write": true
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457031,
					"folder": "9904c06b-7617-88ca-522a-e0273427e221",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "4bca6632-7e50-cb15-cc33-d99843a46c85",
					"name": "INGREDIENT_FETCH",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "INGREDIENT_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "search_query",
							"value": "ER",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"ING_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"ING_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457066,
					"folder": "c36d1d5c-33c3-cde7-076f-7a231d659cb7",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "4eb76ff0-3196-eebe-3a7f-bd37a436441e",
					"name": "VIEW_RECIPE_FETCH",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "VIEW_RECIPE_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"USER_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"USER_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457037,
					"folder": "3d7bf0b5-630c-09cb-5e60-5271dec69064",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "4f0c7d80-65af-bc64-8389-dcf54b51c86e",
					"name": "LIKE_SUBMIT(REVIEW)",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "LIKE_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type",
							"value": "REVIEW",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type_id",
							"value": "{{rev_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"isLiked\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"isLiked\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2826544415,
					"folder": "c560465f-402b-a0b7-2081-89457d5d0daa",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "51497504-3696-bba3-3386-e05105ef9a99",
					"name": "REVIEW_RECIPE_FETCH",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "REVIEW_RECIPE_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"REV_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"REV_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-16T10:07:47.000Z",
					"updatedAt": "2017-12-18T09:17:46.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "53f99a93-4b98-43c8-33c0-5beff4ffa8c1",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "8967c77a-bad4-ecdf-54da-42117b2d19b7",
					"queryParams": [],
					"preRequestScript": "postman.setEnvironmentVariable(\"email\", randomString(10)+\"@gmail.com\");\r\n\r\nfunction randomString(length) {\r\n  var text = \"\";\r\n  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "USER_UPDATE_PASSWORD",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "COOKERY1",
							"description": "",
							"type": "text",
							"enabled": true
						},
						{
							"key": "new_password",
							"value": "COOKERY",
							"description": "",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"EMAIL\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1514706964180,
					"name": "USER_UPDATE_PASSWORD",
					"description": null,
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "57d7027c-cd5e-efe7-9bfd-f157f4210aa3",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "c560465f-402b-a0b7-2081-89457d5d0daa",
					"queryParams": [],
					"preRequestScript": "postman.setEnvironmentVariable(\"id\", randomNumber(2));\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "REVIEW_DELETE",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rev_id",
							"value": "{{rev_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1514478736616,
					"name": "REVIEW_DELETE",
					"description": null,
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"responses": []
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2829409708,
					"folder": "c560465f-402b-a0b7-2081-89457d5d0daa",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "5913c094-a9ca-7545-a717-dda47c4613d8",
					"name": "REVIEW_SUBMIT",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "REVIEW_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "review",
							"value": "TEST REVIEW - {{id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rating",
							"value": "3",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"id\", randomNumber(2));\r",
									"\r",
									"\r",
									"function randomNumber(length) {\r",
									"  var text = \"\";\r",
									"  var possible = \"0123456789\";\r",
									"\r",
									"  for (var i = 0; i < length; i++)\r",
									"    text += possible.charAt(Math.floor(Math.random() * possible.length));\r",
									"\r",
									"  return text;\r",
									"}\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"isReviewed\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": "postman.setEnvironmentVariable(\"id\", randomNumber(2));\r\n\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"isReviewed\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-18T14:38:46.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2826431886,
					"folder": "c560465f-402b-a0b7-2081-89457d5d0daa",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "5981a91c-cea0-c976-7c89-8c83cac79f70",
					"name": "REVIEW_USER_FETCH",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "REVIEW_USER_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"REV_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"REV_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-18T09:06:25.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457043,
					"folder": "aa37b9d4-7431-6eea-dba1-47ab81e6c9de",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "5c48ceed-e6d1-12b6-484f-09bf8120f3b8",
					"name": "FOOD_CUISINE_FETCH_ALL",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "FOOD_CUISINE_FETCH_ALL",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"FOOD_CSN_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"FOOD_CSN_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n\n\n\n",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "69289aa1-8c33-5df0-2ee7-39a2fa9df916",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "8967c77a-bad4-ecdf-54da-42117b2d19b7",
					"queryParams": [],
					"preRequestScript": "postman.setEnvironmentVariable(\"id\", randomNumber(2));\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "USER_UPDATE_NAME",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "name",
							"value": "TEST NAME -  {{id}}",
							"description": "",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"EMAIL\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1514703261243,
					"name": "USER_UPDATE_NAME",
					"description": null,
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2867844862,
					"folder": "cfa3f69f-203d-a2d8-c479-76b7d0a649a9",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "6fa09194-832b-03d1-32f9-ab5c9e685e03",
					"name": "TIMELINE_USER_FETCH",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "TIMELINE_USER_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"TMLN_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"TMLN_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-24T15:12:09.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "883c2b9d-5866-61cc-9183-5c4747f3dba8",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2886589093,
					"folder": "8967c77a-bad4-ecdf-54da-42117b2d19b7",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"name": "USER_FETCH",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "USER_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"EMAIL\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": "\r\n",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"EMAIL\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-27T05:31:12.000Z",
					"updatedAt": "2017-12-28T09:18:31.000Z",
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"write": true
				},
				{
					"id": "8a56d731-9847-fd04-32f1-c25a75e5469e",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"queryParams": [],
					"preRequestScript": "postman.setEnvironmentVariable(\"id\", randomNumber(2));\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_DELETE",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1514478744242,
					"name": "RECIPE_DELETE",
					"description": null,
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"responses": []
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457050,
					"folder": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "8ae520b3-73c5-7b9a-0508-ef30b87c31be",
					"name": "RECIPE_FAVORITE_FETCH",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_FAVORITE_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457051,
					"folder": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "9181adae-29a8-c7a3-6d64-ec2f1597889c",
					"name": "RECIPE_USER_VIEWED_FETCH",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_USER_VIEWED_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "92561912-d0e3-cdb8-5a06-340f538a60eb",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "8967c77a-bad4-ecdf-54da-42117b2d19b7",
					"queryParams": [],
					"preRequestScript": "postman.setEnvironmentVariable(\"mobile\", randomNumber(10));\r\npostman.setEnvironmentVariable(\"email\", randomString(10)+\"@gmail.com\");\r\npostman.setEnvironmentVariable(\"password\", randomString(10));\r\npostman.setEnvironmentVariable(\"id\", randomNumber(2));\r\n\r\nfunction randomString(length) {\r\n  var text = \"\";\r\n  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "USER_REGISTER",
							"type": "text",
							"enabled": true
						},
						{
							"key": "mobile",
							"value": "{{mobile}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "COOKERY",
							"type": "text",
							"enabled": true
						},
						{
							"key": "name",
							"value": "Test User -  {{id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "gender",
							"value": "M",
							"type": "text",
							"enabled": true
						},
						{
							"key": "email",
							"value": "{{email}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1514623811091,
					"name": "USER_REGISTER",
					"description": null,
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"responses": []
				},
				{
					"id": "a1a35ca6-4c63-4d51-e99f-1229ada6c211",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "8967c77a-bad4-ecdf-54da-42117b2d19b7",
					"queryParams": [],
					"preRequestScript": "postman.setEnvironmentVariable(\"email\", randomString(10)+\"@gmail.com\");\r\n\r\nfunction randomString(length) {\r\n  var text = \"\";\r\n  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "USER_UPDATE_EMAIL",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "email",
							"value": "{{email}}",
							"description": "",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"EMAIL\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1514703293816,
					"name": "USER_UPDATE_EMAIL",
					"description": null,
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457045,
					"folder": "aa37b9d4-7431-6eea-dba1-47ab81e6c9de",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "a1dab037-450c-b58f-478c-fdb4246170ef",
					"name": "QUANTITY_FETCH_ALL",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "QUANTITY_FETCH_ALL",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"QTY_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"QTY_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n\n\n\n",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2852722474,
					"folder": "c36d1d5c-33c3-cde7-076f-7a231d659cb7",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "b0acb648-91f4-e223-c227-ff077e7a8a9c",
					"name": "VIEW_FETCH_USERS",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "VIEW_FETCH_USERS",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"USER_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"USER_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-21T08:23:02.000Z",
					"updatedAt": "2017-12-21T08:24:06.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2851935118,
					"folder": "3d7bf0b5-630c-09cb-5e60-5271dec69064",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "bacf9355-00da-d204-1ab8-2f8415418c9e",
					"name": "LIKE_FETCH_USERS(RECIPE)",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "LIKE_FETCH_USERS",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type",
							"value": "RECIPE",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"USER_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"USER_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-21T06:53:46.000Z",
					"updatedAt": "2017-12-21T07:00:21.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2821690605,
					"folder": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "bc051212-62e1-6055-b9ba-f3679c103352",
					"name": "RECIPE_USER_FETCH",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_USER_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-16T21:42:32.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "bdeaeafa-a5db-ca83-9b76-55f0cfb7737f",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "8967c77a-bad4-ecdf-54da-42117b2d19b7",
					"queryParams": [],
					"preRequestScript": "postman.setEnvironmentVariable(\"phone\", randomNumber(10));\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "USER_UPDATE_PHONE",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "gender",
							"value": "F",
							"description": "",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"EMAIL\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1514789458773,
					"name": "USER_UPDATE_GENDER",
					"description": null,
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457059,
					"folder": "c560465f-402b-a0b7-2081-89457d5d0daa",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "ccd2d2a2-46b0-2ab0-7550-26139f1ceafe",
					"name": "REVIEW_RECIPE_AVG_RATING",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "REVIEW_RECIPE_AVG_RATING",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RATING\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RATING\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "d0a95581-d78c-f209-e432-cb8ea3d7c4e7",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_SEARCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "search_query",
							"value": "test",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_LONG\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1514402837149,
					"name": "RECIPE_SEARCH",
					"description": null,
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"responses": []
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457054,
					"folder": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "d35eafc0-0057-9041-7b70-7bdbc5bbd832",
					"name": "RECIPE_USER_REVIEWED_FETCH",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_USER_REVIEWED_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2829347090,
					"folder": "4b995d8c-a88c-4261-11ba-55379a2ad771",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "d3962e04-67db-fe79-7534-80a22037c325",
					"name": "COMMENT_SUBMIT",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "COMMENT_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "comment",
							"value": "TEST COMMENT-{{id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"id\", randomNumber(2));\r",
									"\r",
									"\r",
									"function randomNumber(length) {\r",
									"  var text = \"\";\r",
									"  var possible = \"0123456789\";\r",
									"\r",
									"  for (var i = 0; i < length; i++)\r",
									"    text += possible.charAt(Math.floor(Math.random() * possible.length));\r",
									"\r",
									"  return text;\r",
									"}\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"err_message\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"if(isJson(responseBody)){",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": "postman.setEnvironmentVariable(\"id\", randomNumber(2));\r\n\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-18T14:31:13.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457055,
					"folder": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "d4683b09-e20e-ffbb-5e02-fff8c6849e06",
					"name": "RECIPE_FETCH",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2823209535,
					"folder": "4b995d8c-a88c-4261-11ba-55379a2ad771",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "d84d8099-4310-3147-1fde-0262012e29f0",
					"name": "COMMENT_RECIPE_FETCH_ALL",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "COMMENT_RECIPE_FETCH_ALL",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"USER_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"USER_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-17T18:17:13.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "db2febea-2f95-4792-617b-076eca1530a5",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "8967c77a-bad4-ecdf-54da-42117b2d19b7",
					"queryParams": [],
					"preRequestScript": "postman.setEnvironmentVariable(\"phone\", randomNumber(10));\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "USER_UPDATE_IMAGE",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "image",
							"value": "",
							"description": "",
							"type": "file",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"EMAIL\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1514797122409,
					"name": "USER_UPDATE_IMAGE",
					"description": null,
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2851957486,
					"folder": "3d7bf0b5-630c-09cb-5e60-5271dec69064",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "e26cfd90-c079-8e1c-960e-e6ab774b0a83",
					"name": "LIKE_FETCH_USERS(REVIEW)",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "LIKE_FETCH_USERS",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type",
							"value": "REVIEW",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type_id",
							"value": "{{rev_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"USER_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"USER_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-21T07:00:56.000Z",
					"updatedAt": "2017-12-21T07:02:15.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457039,
					"folder": "3d7bf0b5-630c-09cb-5e60-5271dec69064",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "eaa1f92c-b0f2-14bc-5c75-46f9590e44ee",
					"name": "LIKE_SUBMIT(RECIPE)",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "LIKE_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type",
							"value": "RECIPE",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"isLiked\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"isLiked\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457046,
					"folder": "aa37b9d4-7431-6eea-dba1-47ab81e6c9de",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "f9046990-eaa7-c5d2-b1b8-2f26c8b5c6e6",
					"name": "TASTE_FETCH_ALL",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "TASTE_FETCH_ALL",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"TST_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"TST_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n\n\n\n",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"lastRevision": 2757457047,
					"folder": "aa37b9d4-7431-6eea-dba1-47ab81e6c9de",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"id": "fd4383d4-d1fc-3bf1-be43-807732a826fc",
					"name": "FOOD_TYPE_FETCH_ALL",
					"dataMode": "params",
					"data": [
						{
							"key": "function_key",
							"value": "FOOD_TYPE_FETCH_ALL",
							"type": "text",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"FOOD_TYP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"rawModeData": null,
					"descriptionFormat": null,
					"description": null,
					"variables": null,
					"headers": "",
					"method": "POST",
					"pathVariables": {},
					"url": "{{URL}}public/Controller.php",
					"preRequestScript": null,
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"FOOD_TYP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n\n\n\n",
					"currentHelper": null,
					"helperAttributes": null,
					"queryParams": [],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-12-07T10:36:28.000Z",
					"updatedAt": "2017-12-07T10:36:28.000Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				}
			]
		}
	],
	"environments": [
		{
			"id": "48711395-8e76-7bb0-1dca-e1533fbf87dc",
			"name": "Cookery Environment",
			"values": [
				{
					"enabled": true,
					"key": "RESPONSE_TIME_SHORT",
					"value": "1000",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "RESPONSE_TIME_MEDIUM",
					"value": "5000",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "RESPONSE_TIME_LONG",
					"value": "10000",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "STATUS_CODE",
					"value": "200",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "URL",
					"value": "http://cookery_php-ajitkamathk452607.codeanyapp.com/",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "DB_INDEX",
					"value": "0",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "mobile",
					"value": "6646745288",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "email",
					"value": "2usvcVlzb6@gmail.com",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "password",
					"value": "wNYPl5ixeY",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "user_id",
					"value": "1",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "rcp_id",
					"value": "103",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "com_id",
					"value": "9",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "rev_id",
					"value": "9",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "tmln_id",
					"value": "1",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "id",
					"value": "08",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "phone",
					"value": "9856211835",
					"type": "text"
				}
			],
			"team": null,
			"timestamp": 1514802567737
		}
	],
	"headerPresets": [],
	"globals": [
		{
			"key": "variable_key",
			"type": "text",
			"value": "variable_value",
			"enabled": true
		}
	]
}