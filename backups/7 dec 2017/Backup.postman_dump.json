{
	"version": 1,
	"collections": [
		{
			"id": "c97db7cd-59c4-7fde-1062-52bcd198bd12",
			"name": "Cookery Health Check - MANUAL",
			"description": "",
			"order": [],
			"folders": [
				{
					"name": "Recipe",
					"description": "",
					"collection": "c97db7cd-59c4-7fde-1062-52bcd198bd12",
					"order": [
						"8fd4554a-9377-7cc2-1d6a-2e70f819a06c",
						"04493831-f3e5-3049-749d-ed9a8639bff7"
					],
					"owner": "833319",
					"folders_order": [],
					"id": "01c1fc0e-6790-566d-52ad-e65605124859",
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:27.020Z",
					"updatedAt": "2017-12-07T10:36:27.672Z",
					"transactionId": "51c567ed-9731-4261-bf76-b77464ce4bc8",
					"collection_id": "c97db7cd-59c4-7fde-1062-52bcd198bd12"
				}
			],
			"folders_order": [
				"01c1fc0e-6790-566d-52ad-e65605124859"
			],
			"timestamp": 0,
			"synced": true,
			"remote_id": "0",
			"owner": "833319",
			"sharedWithTeam": false,
			"subscribed": false,
			"remoteLink": "",
			"remoteLinkUpdatedAt": null,
			"public": false,
			"createdAt": "2017-12-07T10:36:26.855Z",
			"updatedAt": 1512644176048,
			"write": true,
			"published": false,
			"favorite": false,
			"permissions": {},
			"syncedPermissions": {},
			"requests": [
				{
					"id": "04493831-f3e5-3049-749d-ed9a8639bff7",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_nm",
							"value": "TEST_RECIPE_NAME",
							"type": "text",
							"enabled": true
						},
						{
							"key": "food_csn_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "food_typ_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_steps[]",
							"value": "TEST STEP !",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_steps[]",
							"value": "TEST STEP 2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_id[]",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_id[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_nm[]",
							"value": "TEST INGREDIENT 1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_nm[]",
							"value": "TEST INGREDIENT 2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "qty_id[]",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "qty_id[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_qty[]",
							"value": "5",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_qty[]",
							"value": "6",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_id[]",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_id[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_id[]",
							"value": "3",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_qty[]",
							"value": "4",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_qty[]",
							"value": "3",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_qty[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "images[]",
							"value": null,
							"type": "file",
							"enabled": true
						},
						{
							"key": "images[]",
							"value": null,
							"type": "file",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_LONG\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "RECIPE_SUBMIT(UPDATE)",
					"owner": "833319",
					"folder": "01c1fc0e-6790-566d-52ad-e65605124859",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_LONG\"));",
									"var STRING = \"err_message\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"if(isJson(responseBody)){",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:27.303Z",
					"updatedAt": "2017-12-07T10:36:27.303Z",
					"responses": [],
					"collectionId": "c97db7cd-59c4-7fde-1062-52bcd198bd12"
				},
				{
					"id": "8fd4554a-9377-7cc2-1d6a-2e70f819a06c",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "01c1fc0e-6790-566d-52ad-e65605124859",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_nm",
							"value": "TEST_RECIPE_NAME",
							"type": "text",
							"enabled": true
						},
						{
							"key": "food_csn_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "food_typ_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_steps[]",
							"value": "TEST STEP !",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_steps[]",
							"value": "TEST STEP 2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_id[]",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_id[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_nm[]",
							"value": "TEST INGREDIENT 1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_nm[]",
							"value": "TEST INGREDIENT 2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "qty_id[]",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "qty_id[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_qty[]",
							"value": "5",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_qty[]",
							"value": "6",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_id[]",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_id[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_id[]",
							"value": "3",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_qty[]",
							"value": "4",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_qty[]",
							"value": "3",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_qty[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "images[]",
							"value": null,
							"type": "file",
							"enabled": true
						},
						{
							"key": "images[]",
							"value": null,
							"type": "file",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_LONG\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "RECIPE_SUBMIT(ADD)",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_LONG\"));",
									"var STRING = \"err_message\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"if(isJson(responseBody)){",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:27.305Z",
					"updatedAt": "2017-12-07T10:36:27.305Z",
					"responses": [],
					"collectionId": "c97db7cd-59c4-7fde-1062-52bcd198bd12"
				}
			]
		},
		{
			"id": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
			"name": "Cookery Health Check - AUTO",
			"description": "",
			"order": [],
			"folders": [
				{
					"name": "Comment",
					"description": "",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"order": [
						"d3962e04-67db-fe79-7534-80a22037c325",
						"d84d8099-4310-3147-1fde-0262012e29f0",
						"0e22a8aa-7f4f-48b4-911b-497505dfbae0"
					],
					"owner": "833319",
					"folders_order": [],
					"id": "4b995d8c-a88c-4261-11ba-55379a2ad771",
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:27.941Z",
					"updatedAt": "2017-12-07T10:36:29.008Z",
					"transactionId": "06c5a488-291b-4dd4-9feb-125f610d81c7",
					"collection_id": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"name": "Ingredient",
					"description": "",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"order": [
						"4bca6632-7e50-cb15-cc33-d99843a46c85"
					],
					"owner": "833319",
					"folders_order": [],
					"id": "9904c06b-7617-88ca-522a-e0273427e221",
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:27.942Z",
					"updatedAt": "2017-12-07T10:36:29.013Z",
					"transactionId": "06c5a488-291b-4dd4-9feb-125f610d81c7",
					"collection_id": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"name": "Like",
					"description": "",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"order": [
						"eaa1f92c-b0f2-14bc-5c75-46f9590e44ee",
						"05d4be8e-7cc4-b847-d10a-72c39225ee77",
						"4f0c7d80-65af-bc64-8389-dcf54b51c86e"
					],
					"owner": "833319",
					"folders_order": [],
					"id": "3d7bf0b5-630c-09cb-5e60-5271dec69064",
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:27.943Z",
					"updatedAt": "2017-12-07T10:36:29.027Z",
					"transactionId": "06c5a488-291b-4dd4-9feb-125f610d81c7",
					"collection_id": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"name": "Master Data",
					"description": "",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"order": [
						"a1dab037-450c-b58f-478c-fdb4246170ef",
						"5c48ceed-e6d1-12b6-484f-09bf8120f3b8",
						"fd4383d4-d1fc-3bf1-be43-807732a826fc",
						"f9046990-eaa7-c5d2-b1b8-2f26c8b5c6e6"
					],
					"owner": "833319",
					"folders_order": [],
					"id": "aa37b9d4-7431-6eea-dba1-47ab81e6c9de",
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:27.944Z",
					"updatedAt": "2017-12-07T10:36:29.043Z",
					"transactionId": "06c5a488-291b-4dd4-9feb-125f610d81c7",
					"collection_id": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"name": "Recipe",
					"description": "",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"order": [
						"d4683b09-e20e-ffbb-5e02-fff8c6849e06",
						"25bf02ac-9188-8ff5-f377-2d976eeb7f90",
						"c0c0e285-7923-7dfb-9431-212382a2f6f8",
						"8ae520b3-73c5-7b9a-0508-ef30b87c31be",
						"bc051212-62e1-6055-b9ba-f3679c103352",
						"9181adae-29a8-c7a3-6d64-ec2f1597889c",
						"d35eafc0-0057-9041-7b70-7bdbc5bbd832",
						"8a56d731-9847-fd04-32f1-c25a75e5469e"
					],
					"owner": "833319",
					"folders_order": [],
					"id": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:27.944Z",
					"updatedAt": "2017-12-07T10:36:29.092Z",
					"transactionId": "06c5a488-291b-4dd4-9feb-125f610d81c7",
					"collection_id": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"name": "Review",
					"description": "",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"order": [
						"5913c094-a9ca-7545-a717-dda47c4613d8",
						"5981a91c-cea0-c976-7c89-8c83cac79f70",
						"ccd2d2a2-46b0-2ab0-7550-26139f1ceafe",
						"57d7027c-cd5e-efe7-9bfd-f157f4210aa3"
					],
					"owner": "833319",
					"folders_order": [],
					"id": "c560465f-402b-a0b7-2081-89457d5d0daa",
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:27.945Z",
					"updatedAt": "2017-12-07T10:36:29.126Z",
					"transactionId": "06c5a488-291b-4dd4-9feb-125f610d81c7",
					"collection_id": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"name": "Timeline",
					"description": "",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"order": [
						"0867729f-4d10-80c3-289d-a0e56ae05fd9",
						"6fa09194-832b-03d1-32f9-ab5c9e685e03"
					],
					"owner": "833319",
					"folders_order": [],
					"id": "cfa3f69f-203d-a2d8-c479-76b7d0a649a9",
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:27.946Z",
					"updatedAt": "2017-12-07T10:36:29.141Z",
					"transactionId": "06c5a488-291b-4dd4-9feb-125f610d81c7",
					"collection_id": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"name": "User",
					"description": "",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"order": [
						"92561912-d0e3-cdb8-5a06-340f538a60eb",
						"1bd40a8b-c7ec-49fa-5b24-dfc57fd54026"
					],
					"owner": "833319",
					"folders_order": [],
					"id": "8967c77a-bad4-ecdf-54da-42117b2d19b7",
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:27.947Z",
					"updatedAt": "2017-12-07T10:36:29.177Z",
					"transactionId": "06c5a488-291b-4dd4-9feb-125f610d81c7",
					"collection_id": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"name": "View",
					"description": "",
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"order": [
						"4eb76ff0-3196-eebe-3a7f-bd37a436441e"
					],
					"owner": "833319",
					"folders_order": [],
					"id": "c36d1d5c-33c3-cde7-076f-7a231d659cb7",
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:27.948Z",
					"updatedAt": "2017-12-07T10:36:29.186Z",
					"transactionId": "06c5a488-291b-4dd4-9feb-125f610d81c7",
					"collection_id": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				}
			],
			"folders_order": [
				"aa37b9d4-7431-6eea-dba1-47ab81e6c9de",
				"8967c77a-bad4-ecdf-54da-42117b2d19b7",
				"671fe0e0-deba-05e4-8c9b-710831c0b7bb",
				"9904c06b-7617-88ca-522a-e0273427e221",
				"c36d1d5c-33c3-cde7-076f-7a231d659cb7",
				"3d7bf0b5-630c-09cb-5e60-5271dec69064",
				"cfa3f69f-203d-a2d8-c479-76b7d0a649a9",
				"4b995d8c-a88c-4261-11ba-55379a2ad771",
				"c560465f-402b-a0b7-2081-89457d5d0daa"
			],
			"timestamp": 0,
			"synced": true,
			"remote_id": "0",
			"owner": "833319",
			"sharedWithTeam": false,
			"subscribed": false,
			"remoteLink": "",
			"remoteLinkUpdatedAt": null,
			"public": false,
			"createdAt": "2017-12-07T10:36:27.917Z",
			"updatedAt": 1512644171194,
			"write": true,
			"published": false,
			"favorite": false,
			"permissions": {},
			"syncedPermissions": {},
			"requests": [
				{
					"id": "05d4be8e-7cc4-b847-d10a-72c39225ee77",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "3d7bf0b5-630c-09cb-5e60-5271dec69064",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "LIKE_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type",
							"value": "COMMENT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type_id",
							"value": "{{com_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"isLiked\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "LIKE_SUBMIT(COMMENT)",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"isLiked\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.170Z",
					"updatedAt": "2017-12-07T10:36:28.170Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "0867729f-4d10-80c3-289d-a0e56ae05fd9",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "cfa3f69f-203d-a2d8-c479-76b7d0a649a9",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "TIMELINE_USER_FETCH_ALL",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"TMLN_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "TIMELINE_USER_FETCH_ALL",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"TMLN_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.240Z",
					"updatedAt": "2017-12-07T10:36:28.240Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "0e22a8aa-7f4f-48b4-911b-497505dfbae0",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "4b995d8c-a88c-4261-11ba-55379a2ad771",
					"queryParams": [],
					"preRequestScript": "postman.setEnvironmentVariable(\"id\", randomNumber(1));\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "COMMENT_DELETE",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "com_id",
							"value": "{{id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1512643725508,
					"name": "COMMENT_DELETE",
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"responses": [],
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"owner": "833319"
				},
				{
					"id": "1bd40a8b-c7ec-49fa-5b24-dfc57fd54026",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "8967c77a-bad4-ecdf-54da-42117b2d19b7",
					"queryParams": [],
					"preRequestScript": "\r\n",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "USER_LOGIN",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "email",
							"value": "{{email}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "USER_LOGIN",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"err_message\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"if(isJson(responseBody)){",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.253Z",
					"updatedAt": "2017-12-07T10:36:28.253Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "25bf02ac-9188-8ff5-f377-2d976eeb7f90",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_TRENDING_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "RECIPE_TRENDING_FETCH",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.210Z",
					"updatedAt": "2017-12-07T10:36:28.210Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "4bca6632-7e50-cb15-cc33-d99843a46c85",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "9904c06b-7617-88ca-522a-e0273427e221",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "INGREDIENT_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "search_query",
							"value": "ER",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"ING_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "INGREDIENT_FETCH",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"ING_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.164Z",
					"updatedAt": "2017-12-07T10:36:28.164Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "4eb76ff0-3196-eebe-3a7f-bd37a436441e",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "c36d1d5c-33c3-cde7-076f-7a231d659cb7",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "VIEW_RECIPE_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"USER_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "VIEW_RECIPE_FETCH",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"USER_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.259Z",
					"updatedAt": "2017-12-07T10:36:28.259Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "4f0c7d80-65af-bc64-8389-dcf54b51c86e",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "3d7bf0b5-630c-09cb-5e60-5271dec69064",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "LIKE_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type",
							"value": "REVIEW",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type_id",
							"value": "{{rev_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"isLiked\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "LIKE_SUBMIT(REVIEW)",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"isLiked\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.171Z",
					"updatedAt": "2017-12-07T10:36:28.171Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "57d7027c-cd5e-efe7-9bfd-f157f4210aa3",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "c560465f-402b-a0b7-2081-89457d5d0daa",
					"queryParams": [],
					"preRequestScript": "postman.setEnvironmentVariable(\"id\", randomNumber(1));\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "REVIEW_DELETE",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rev_id",
							"value": "{{id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1512643742708,
					"name": "REVIEW_DELETE",
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"responses": [],
					"collection": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"owner": "833319"
				},
				{
					"id": "5913c094-a9ca-7545-a717-dda47c4613d8",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "c560465f-402b-a0b7-2081-89457d5d0daa",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "REVIEW_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "review",
							"value": "TEST REVIEW",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rating",
							"value": "4",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"isReviewed\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "REVIEW_SUBMIT",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"isReviewed\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.225Z",
					"updatedAt": "2017-12-07T10:36:28.225Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "5981a91c-cea0-c976-7c89-8c83cac79f70",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "c560465f-402b-a0b7-2081-89457d5d0daa",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "REVIEW_USER_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "REVIEW_USER_FETCH",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.226Z",
					"updatedAt": "2017-12-07T10:36:28.226Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "5c48ceed-e6d1-12b6-484f-09bf8120f3b8",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "aa37b9d4-7431-6eea-dba1-47ab81e6c9de",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "FOOD_CUISINE_FETCH_ALL",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"FOOD_CSN_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n\n\n\n",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "FOOD_CUISINE_FETCH_ALL",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"FOOD_CSN_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.178Z",
					"updatedAt": "2017-12-07T10:36:28.178Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "6fa09194-832b-03d1-32f9-ab5c9e685e03",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "cfa3f69f-203d-a2d8-c479-76b7d0a649a9",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "TIMELINE_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tmln_id",
							"value": "{{tmln_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"TMLN_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "TIMELINE_FETCH",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"TMLN_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.241Z",
					"updatedAt": "2017-12-07T10:36:28.241Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "8a56d731-9847-fd04-32f1-c25a75e5469e",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"queryParams": [],
					"preRequestScript": "postman.setEnvironmentVariable(\"id\", randomNumber(1));\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_DELETE",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1512644577026,
					"name": "RECIPE_DELETE",
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d",
					"responses": []
				},
				{
					"id": "8ae520b3-73c5-7b9a-0508-ef30b87c31be",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_FAVORITE_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "RECIPE_FAVORITE_FETCH",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.212Z",
					"updatedAt": "2017-12-07T10:36:28.212Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "9181adae-29a8-c7a3-6d64-ec2f1597889c",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_USER_VIEWED_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "RECIPE_USER_VIEWED_FETCH",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.213Z",
					"updatedAt": "2017-12-07T10:36:28.213Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "92561912-d0e3-cdb8-5a06-340f538a60eb",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "8967c77a-bad4-ecdf-54da-42117b2d19b7",
					"queryParams": [],
					"preRequestScript": "postman.setEnvironmentVariable(\"mobile\", randomNumber(10));\r\npostman.setEnvironmentVariable(\"email\", randomString(10)+\"@gmail.com\");\r\npostman.setEnvironmentVariable(\"password\", randomString(10));\r\n\r\nfunction randomString(length) {\r\n  var text = \"\";\r\n  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "USER_REGISTER",
							"type": "text",
							"enabled": true
						},
						{
							"key": "mobile",
							"value": "{{mobile}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "name",
							"value": "Test User",
							"type": "text",
							"enabled": true
						},
						{
							"key": "gender",
							"value": "M",
							"type": "text",
							"enabled": true
						},
						{
							"key": "email",
							"value": "{{email}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "USER_REGISTER",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"mobile\", randomNumber(10));\r",
									"postman.setEnvironmentVariable(\"email\", randomString(10)+\"@gmail.com\");\r",
									"postman.setEnvironmentVariable(\"password\", randomString(10));\r",
									"\r",
									"function randomString(length) {\r",
									"  var text = \"\";\r",
									"  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r",
									"\r",
									"  for (var i = 0; i < length; i++)\r",
									"    text += possible.charAt(Math.floor(Math.random() * possible.length));\r",
									"\r",
									"  return text;\r",
									"}\r",
									"\r",
									"function randomNumber(length) {\r",
									"  var text = \"\";\r",
									"  var possible = \"0123456789\";\r",
									"\r",
									"  for (var i = 0; i < length; i++)\r",
									"    text += possible.charAt(Math.floor(Math.random() * possible.length));\r",
									"\r",
									"  return text;\r",
									"}\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"err_message\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"if(isJson(responseBody)){",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.254Z",
					"updatedAt": "2017-12-07T10:36:28.254Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "a1dab037-450c-b58f-478c-fdb4246170ef",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "aa37b9d4-7431-6eea-dba1-47ab81e6c9de",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "QUANTITY_FETCH_ALL",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"QTY_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n\n\n\n",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "QUANTITY_FETCH_ALL",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"QTY_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.179Z",
					"updatedAt": "2017-12-07T10:36:28.179Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "bc051212-62e1-6055-b9ba-f3679c103352",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_USER_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "RECIPE_USER_FETCH",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.215Z",
					"updatedAt": "2017-12-07T10:36:28.215Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "c0c0e285-7923-7dfb-9431-212382a2f6f8",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_REVIEW_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RATING\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "RECIPE_REVIEW_FETCH",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RATING\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.216Z",
					"updatedAt": "2017-12-07T10:36:28.216Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "ccd2d2a2-46b0-2ab0-7550-26139f1ceafe",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "c560465f-402b-a0b7-2081-89457d5d0daa",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "REVIEW_RECIPE_AVG_RATING",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RATING\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "REVIEW_RECIPE_AVG_RATING",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RATING\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.227Z",
					"updatedAt": "2017-12-07T10:36:28.227Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "d35eafc0-0057-9041-7b70-7bdbc5bbd832",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_USER_REVIEWED_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "RECIPE_USER_REVIEWED_FETCH",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.217Z",
					"updatedAt": "2017-12-07T10:36:28.217Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "d3962e04-67db-fe79-7534-80a22037c325",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "4b995d8c-a88c-4261-11ba-55379a2ad771",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "COMMENT_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "comment",
							"value": "TEST COMMENT",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "COMMENT_SUBMIT",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"err_message\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"if(isJson(responseBody)){",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.158Z",
					"updatedAt": "2017-12-07T10:36:28.158Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "d4683b09-e20e-ffbb-5e02-fff8c6849e06",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "671fe0e0-deba-05e4-8c9b-710831c0b7bb",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "RECIPE_FETCH",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.219Z",
					"updatedAt": "2017-12-07T10:36:28.219Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "d84d8099-4310-3147-1fde-0262012e29f0",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "4b995d8c-a88c-4261-11ba-55379a2ad771",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "COMMENT_RECIPE_FETCH_ALL",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"USER_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "COMMENT_RECIPE_FETCH_ALL",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"USER_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.159Z",
					"updatedAt": "2017-12-07T10:36:28.159Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "eaa1f92c-b0f2-14bc-5c75-46f9590e44ee",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "3d7bf0b5-630c-09cb-5e60-5271dec69064",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "LIKE_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type",
							"value": "RECIPE",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"isLiked\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "LIKE_SUBMIT(RECIPE)",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"isLiked\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.172Z",
					"updatedAt": "2017-12-07T10:36:28.172Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "f9046990-eaa7-c5d2-b1b8-2f26c8b5c6e6",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "aa37b9d4-7431-6eea-dba1-47ab81e6c9de",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "TASTE_FETCH_ALL",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"TST_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n\n\n\n",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "TASTE_FETCH_ALL",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"TST_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.180Z",
					"updatedAt": "2017-12-07T10:36:28.180Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				},
				{
					"id": "fd4383d4-d1fc-3bf1-be43-807732a826fc",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"folder": "aa37b9d4-7431-6eea-dba1-47ab81e6c9de",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "FOOD_TYPE_FETCH_ALL",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"FOOD_TYP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n\n\n\n",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "FOOD_TYPE_FETCH_ALL",
					"owner": "833319",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"FOOD_TYP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:28.181Z",
					"updatedAt": "2017-12-07T10:36:28.181Z",
					"responses": [],
					"collectionId": "3227cfb7-ef56-aeb7-8b7b-f0e6e74fa54d"
				}
			]
		},
		{
			"id": "c860f768-de21-2575-0b48-994cf8441575",
			"name": "Cookery Health Check - ALL",
			"description": "",
			"order": [],
			"folders": [
				{
					"name": "Comment",
					"description": "",
					"collection": "c860f768-de21-2575-0b48-994cf8441575",
					"order": [
						"423df407-b687-d809-2c7f-5bb90a9c162f",
						"fdabb703-95a6-0132-e322-863a48f28782",
						"7be1eb66-7007-cd22-ca9b-db6af9b7eb23"
					],
					"owner": "833319",
					"folders_order": [],
					"id": "886365e4-bf45-6243-4d7d-8eac59e08f5f",
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:29.891Z",
					"updatedAt": "2017-12-07T10:36:31.275Z",
					"transactionId": "19eea2b2-d7da-480c-8971-55acd4f3c8d2",
					"collection_id": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"name": "Ingredient",
					"description": "",
					"collection": "c860f768-de21-2575-0b48-994cf8441575",
					"order": [
						"9af8a30c-1e9f-4b35-6865-b978840c39ac"
					],
					"owner": "833319",
					"folders_order": [],
					"id": "4baca760-6428-87d0-ab42-f598117978f7",
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:29.892Z",
					"updatedAt": "2017-12-07T10:36:31.280Z",
					"transactionId": "19eea2b2-d7da-480c-8971-55acd4f3c8d2",
					"collection_id": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"name": "Like",
					"description": "",
					"collection": "c860f768-de21-2575-0b48-994cf8441575",
					"order": [
						"7151d15d-ded3-d284-9e45-cf397263126c",
						"603a54c4-c6fd-8eee-279c-34c2a952aaf2",
						"e233632c-21bd-5cb4-f5b3-f789e95925c2"
					],
					"owner": "833319",
					"folders_order": [],
					"id": "b14e61cc-a794-4351-e874-6eaf25cbde65",
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:29.892Z",
					"updatedAt": "2017-12-07T10:36:31.309Z",
					"transactionId": "19eea2b2-d7da-480c-8971-55acd4f3c8d2",
					"collection_id": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"name": "Master Data",
					"description": "",
					"collection": "c860f768-de21-2575-0b48-994cf8441575",
					"order": [
						"0e80413a-afe5-05cf-691c-c16f08108fa9",
						"bab5c477-0d46-30c7-51d2-d78867c5c604",
						"02c634ff-1e87-a534-7318-6f1e9a094b88",
						"bcaa4723-e4bc-85aa-0a5e-e123a3b6f493"
					],
					"owner": "833319",
					"folders_order": [],
					"id": "579b5095-1ba9-fd23-eeb1-c5246be73b2e",
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:29.893Z",
					"updatedAt": "2017-12-07T10:36:31.339Z",
					"transactionId": "19eea2b2-d7da-480c-8971-55acd4f3c8d2",
					"collection_id": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"name": "Recipe",
					"description": "",
					"collection": "c860f768-de21-2575-0b48-994cf8441575",
					"order": [
						"b1c2ab57-4697-548c-9863-e0c9ece25d87",
						"a6d11aa7-577f-2a11-0d16-b4ead859e894",
						"bc5a7ce3-cc02-7c48-9b0b-21cfff98051b",
						"2bb7a07d-bb17-6390-c1ac-67aeee3f8c6d",
						"22983ec2-2386-8eb2-c5b4-8f042d8d9d45",
						"8906a810-3fc3-7b69-3ea0-dace26517483",
						"b0579e06-1ac4-0a50-ddb9-bb69a861c595",
						"c2733dca-357a-2cff-bdac-558dee13ffb7",
						"f785339d-1fb7-0357-2e6d-1cc4b730f3f3",
						"3a3c6cf3-ff48-2911-9afa-37f90b91637e"
					],
					"owner": "833319",
					"folders_order": [],
					"id": "744eb490-2f9f-9a04-0801-d9c373602148",
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:29.894Z",
					"updatedAt": "2017-12-07T10:36:31.396Z",
					"transactionId": "19eea2b2-d7da-480c-8971-55acd4f3c8d2",
					"collection_id": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"name": "Review",
					"description": "",
					"collection": "c860f768-de21-2575-0b48-994cf8441575",
					"order": [
						"3196bab0-2e0e-3122-7d9c-abe78a549cf7",
						"b5cf75b8-9b30-978d-99c9-5b634e8843cc",
						"72637002-1da4-4169-f593-466bf2f4e2dc",
						"41d1151b-fa99-fb8a-3c5a-cc3e09a2bf9f"
					],
					"owner": "833319",
					"folders_order": [],
					"id": "a349f80b-1e0c-c0ca-fd01-8730d21309a0",
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:29.895Z",
					"updatedAt": "2017-12-07T10:36:31.417Z",
					"transactionId": "19eea2b2-d7da-480c-8971-55acd4f3c8d2",
					"collection_id": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"name": "Timeline",
					"description": "",
					"collection": "c860f768-de21-2575-0b48-994cf8441575",
					"order": [
						"80b77765-2092-f3cd-ef3c-fcf6cdf4479b",
						"64f1f6a0-ca0e-1f10-ce52-90da57ae945c"
					],
					"owner": "833319",
					"folders_order": [],
					"id": "cc5e3c9a-0eb2-9702-985a-2b282c667f11",
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:29.896Z",
					"updatedAt": "2017-12-07T10:36:31.447Z",
					"transactionId": "19eea2b2-d7da-480c-8971-55acd4f3c8d2",
					"collection_id": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"name": "User",
					"description": "",
					"collection": "c860f768-de21-2575-0b48-994cf8441575",
					"order": [
						"e841e7d3-7ac1-7394-150b-7357dde8745c",
						"bf6944fc-b5fc-7d65-1a61-28ec9458b9f0"
					],
					"owner": "833319",
					"folders_order": [],
					"id": "c06c7498-ab40-9ce5-1906-41e8c8349209",
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:29.897Z",
					"updatedAt": "2017-12-07T10:36:31.462Z",
					"transactionId": "19eea2b2-d7da-480c-8971-55acd4f3c8d2",
					"collection_id": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"name": "View",
					"description": "",
					"collection": "c860f768-de21-2575-0b48-994cf8441575",
					"order": [
						"ecfedf24-c639-0597-f369-ffc92827ba59"
					],
					"owner": "833319",
					"folders_order": [],
					"id": "753d2c04-8fb2-997b-4553-e737a8507359",
					"lastUpdatedBy": "833319",
					"createdAt": "2017-12-07T10:36:29.897Z",
					"updatedAt": "2017-12-07T10:36:31.469Z",
					"transactionId": "19eea2b2-d7da-480c-8971-55acd4f3c8d2",
					"collection_id": "c860f768-de21-2575-0b48-994cf8441575"
				}
			],
			"folders_order": [
				"579b5095-1ba9-fd23-eeb1-c5246be73b2e",
				"c06c7498-ab40-9ce5-1906-41e8c8349209",
				"744eb490-2f9f-9a04-0801-d9c373602148",
				"4baca760-6428-87d0-ab42-f598117978f7",
				"b14e61cc-a794-4351-e874-6eaf25cbde65",
				"cc5e3c9a-0eb2-9702-985a-2b282c667f11",
				"886365e4-bf45-6243-4d7d-8eac59e08f5f",
				"a349f80b-1e0c-c0ca-fd01-8730d21309a0",
				"753d2c04-8fb2-997b-4553-e737a8507359"
			],
			"timestamp": 0,
			"synced": true,
			"remote_id": "0",
			"owner": "833319",
			"sharedWithTeam": false,
			"subscribed": false,
			"remoteLink": "",
			"remoteLinkUpdatedAt": null,
			"public": false,
			"createdAt": "2017-12-07T10:36:29.845Z",
			"updatedAt": 1512644162174,
			"write": true,
			"published": false,
			"favorite": false,
			"permissions": {},
			"syncedPermissions": {},
			"requests": [
				{
					"id": "02c634ff-1e87-a534-7318-6f1e9a094b88",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "FOOD_TYPE_FETCH_ALL",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"FOOD_TYP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n\n\n\n",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "FOOD_TYPE_FETCH_ALL",
					"owner": "833319",
					"folder": "579b5095-1ba9-fd23-eeb1-c5246be73b2e",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"FOOD_TYP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.192Z",
					"updatedAt": "2017-12-07T10:36:30.192Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "0e80413a-afe5-05cf-691c-c16f08108fa9",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "QUANTITY_FETCH_ALL",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"QTY_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n\n\n\n",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "QUANTITY_FETCH_ALL",
					"owner": "833319",
					"folder": "579b5095-1ba9-fd23-eeb1-c5246be73b2e",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"QTY_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.193Z",
					"updatedAt": "2017-12-07T10:36:30.193Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "22983ec2-2386-8eb2-c5b4-8f042d8d9d45",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_REVIEW_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RATING\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "RECIPE_REVIEW_FETCH",
					"owner": "833319",
					"folder": "744eb490-2f9f-9a04-0801-d9c373602148",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RATING\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.204Z",
					"updatedAt": "2017-12-07T10:36:30.204Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "2bb7a07d-bb17-6390-c1ac-67aeee3f8c6d",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_TRENDING_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "RECIPE_TRENDING_FETCH",
					"owner": "833319",
					"folder": "744eb490-2f9f-9a04-0801-d9c373602148",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.205Z",
					"updatedAt": "2017-12-07T10:36:30.205Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "3196bab0-2e0e-3122-7d9c-abe78a549cf7",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "REVIEW_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "review",
							"value": "TEST REVIEW",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rating",
							"value": "4",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"isReviewed\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "REVIEW_SUBMIT",
					"owner": "833319",
					"folder": "a349f80b-1e0c-c0ca-fd01-8730d21309a0",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"isReviewed\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.217Z",
					"updatedAt": "2017-12-07T10:36:30.217Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "3a3c6cf3-ff48-2911-9afa-37f90b91637e",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_DELETE",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "RECIPE_DELETE",
					"owner": "833319",
					"folder": "744eb490-2f9f-9a04-0801-d9c373602148",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"err_message\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.206Z",
					"updatedAt": "2017-12-07T10:36:30.206Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "41d1151b-fa99-fb8a-3c5a-cc3e09a2bf9f",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "REVIEW_DELETE",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rev_id",
							"value": "{{rev_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "REVIEW_DELETE",
					"owner": "833319",
					"folder": "a349f80b-1e0c-c0ca-fd01-8730d21309a0",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"err_message\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"if(isJson(responseBody)){",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.218Z",
					"updatedAt": "2017-12-07T10:36:30.218Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "423df407-b687-d809-2c7f-5bb90a9c162f",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "COMMENT_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "comment",
							"value": "TEST COMMENT",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "COMMENT_SUBMIT",
					"owner": "833319",
					"folder": "886365e4-bf45-6243-4d7d-8eac59e08f5f",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"err_message\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"if(isJson(responseBody)){",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.128Z",
					"updatedAt": "2017-12-07T10:36:30.128Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "603a54c4-c6fd-8eee-279c-34c2a952aaf2",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "LIKE_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type",
							"value": "COMMENT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type_id",
							"value": "{{com_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"isLiked\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "LIKE_SUBMIT(COMMENT)",
					"owner": "833319",
					"folder": "b14e61cc-a794-4351-e874-6eaf25cbde65",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"isLiked\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.183Z",
					"updatedAt": "2017-12-07T10:36:30.183Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "64f1f6a0-ca0e-1f10-ce52-90da57ae945c",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "TIMELINE_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tmln_id",
							"value": "{{tmln_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"TMLN_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "TIMELINE_FETCH",
					"owner": "833319",
					"folder": "cc5e3c9a-0eb2-9702-985a-2b282c667f11",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"TMLN_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.245Z",
					"updatedAt": "2017-12-07T10:36:30.245Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "7151d15d-ded3-d284-9e45-cf397263126c",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "LIKE_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type",
							"value": "RECIPE",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"isLiked\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "LIKE_SUBMIT(RECIPE)",
					"owner": "833319",
					"folder": "b14e61cc-a794-4351-e874-6eaf25cbde65",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"isLiked\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.185Z",
					"updatedAt": "2017-12-07T10:36:30.185Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "72637002-1da4-4169-f593-466bf2f4e2dc",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "REVIEW_RECIPE_AVG_RATING",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RATING\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "REVIEW_RECIPE_AVG_RATING",
					"owner": "833319",
					"folder": "a349f80b-1e0c-c0ca-fd01-8730d21309a0",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RATING\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.219Z",
					"updatedAt": "2017-12-07T10:36:30.219Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "7be1eb66-7007-cd22-ca9b-db6af9b7eb23",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "COMMENT_DELETE",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "com_id",
							"value": "{{com_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "COMMENT_DELETE",
					"owner": "833319",
					"folder": "886365e4-bf45-6243-4d7d-8eac59e08f5f",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"err_message\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"if(isJson(responseBody)){",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.162Z",
					"updatedAt": "2017-12-07T10:36:30.162Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "80b77765-2092-f3cd-ef3c-fcf6cdf4479b",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "TIMELINE_USER_FETCH_ALL",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"TMLN_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "TIMELINE_USER_FETCH_ALL",
					"owner": "833319",
					"folder": "cc5e3c9a-0eb2-9702-985a-2b282c667f11",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"TMLN_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.246Z",
					"updatedAt": "2017-12-07T10:36:30.246Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "8906a810-3fc3-7b69-3ea0-dace26517483",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_FAVORITE_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "RECIPE_FAVORITE_FETCH",
					"owner": "833319",
					"folder": "744eb490-2f9f-9a04-0801-d9c373602148",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.207Z",
					"updatedAt": "2017-12-07T10:36:30.207Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "9af8a30c-1e9f-4b35-6865-b978840c39ac",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "INGREDIENT_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "search_query",
							"value": "ER",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"ING_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "INGREDIENT_FETCH",
					"owner": "833319",
					"folder": "4baca760-6428-87d0-ab42-f598117978f7",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"ING_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.174Z",
					"updatedAt": "2017-12-07T10:36:30.174Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "a6d11aa7-577f-2a11-0d16-b4ead859e894",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_nm",
							"value": "TEST_RECIPE_NAME",
							"type": "text",
							"enabled": true
						},
						{
							"key": "food_csn_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "food_typ_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_steps[]",
							"value": "TEST STEP !",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_steps[]",
							"value": "TEST STEP 2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_id[]",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_id[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_nm[]",
							"value": "TEST INGREDIENT 1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_nm[]",
							"value": "TEST INGREDIENT 2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "qty_id[]",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "qty_id[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_qty[]",
							"value": "5",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_qty[]",
							"value": "6",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_id[]",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_id[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_id[]",
							"value": "3",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_qty[]",
							"value": "4",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_qty[]",
							"value": "3",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_qty[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "images[]",
							"value": null,
							"type": "file",
							"enabled": true
						},
						{
							"key": "images[]",
							"value": null,
							"type": "file",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_LONG\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "RECIPE_SUBMIT(UPDATE)",
					"owner": "833319",
					"folder": "744eb490-2f9f-9a04-0801-d9c373602148",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_LONG\"));",
									"var STRING = \"err_message\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"if(isJson(responseBody)){",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.208Z",
					"updatedAt": "2017-12-07T10:36:30.208Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "b0579e06-1ac4-0a50-ddb9-bb69a861c595",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_USER_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "RECIPE_USER_FETCH",
					"owner": "833319",
					"folder": "744eb490-2f9f-9a04-0801-d9c373602148",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.209Z",
					"updatedAt": "2017-12-07T10:36:30.209Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "b1c2ab57-4697-548c-9863-e0c9ece25d87",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_nm",
							"value": "TEST_RECIPE_NAME",
							"type": "text",
							"enabled": true
						},
						{
							"key": "food_csn_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "food_typ_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_steps[]",
							"value": "TEST STEP !",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_steps[]",
							"value": "TEST STEP 2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_id[]",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_id[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_nm[]",
							"value": "TEST INGREDIENT 1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_nm[]",
							"value": "TEST INGREDIENT 2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "qty_id[]",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "qty_id[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_qty[]",
							"value": "5",
							"type": "text",
							"enabled": true
						},
						{
							"key": "ing_qty[]",
							"value": "6",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_id[]",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_id[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_id[]",
							"value": "3",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_qty[]",
							"value": "4",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_qty[]",
							"value": "3",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tst_qty[]",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "images[]",
							"value": null,
							"type": "file",
							"enabled": true
						},
						{
							"key": "images[]",
							"value": null,
							"type": "file",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_LONG\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "RECIPE_SUBMIT(ADD)",
					"owner": "833319",
					"folder": "744eb490-2f9f-9a04-0801-d9c373602148",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_LONG\"));",
									"var STRING = \"err_message\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"if(isJson(responseBody)){",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.210Z",
					"updatedAt": "2017-12-07T10:36:30.210Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "b5cf75b8-9b30-978d-99c9-5b634e8843cc",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "REVIEW_USER_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "REVIEW_USER_FETCH",
					"owner": "833319",
					"folder": "a349f80b-1e0c-c0ca-fd01-8730d21309a0",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.220Z",
					"updatedAt": "2017-12-07T10:36:30.220Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "bab5c477-0d46-30c7-51d2-d78867c5c604",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "FOOD_CUISINE_FETCH_ALL",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"FOOD_CSN_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n\n\n\n",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "FOOD_CUISINE_FETCH_ALL",
					"owner": "833319",
					"folder": "579b5095-1ba9-fd23-eeb1-c5246be73b2e",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"FOOD_CSN_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.195Z",
					"updatedAt": "2017-12-07T10:36:30.195Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "bc5a7ce3-cc02-7c48-9b0b-21cfff98051b",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "RECIPE_FETCH",
					"owner": "833319",
					"folder": "744eb490-2f9f-9a04-0801-d9c373602148",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.211Z",
					"updatedAt": "2017-12-07T10:36:30.211Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "bcaa4723-e4bc-85aa-0a5e-e123a3b6f493",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "TASTE_FETCH_ALL",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"TST_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n\n\n\n",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "TASTE_FETCH_ALL",
					"owner": "833319",
					"folder": "579b5095-1ba9-fd23-eeb1-c5246be73b2e",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"TST_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.196Z",
					"updatedAt": "2017-12-07T10:36:30.196Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "bf6944fc-b5fc-7d65-1a61-28ec9458b9f0",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": "\r\n",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "USER_LOGIN",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "email",
							"value": "{{email}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "USER_LOGIN",
					"owner": "833319",
					"folder": "c06c7498-ab40-9ce5-1906-41e8c8349209",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"err_message\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"if(isJson(responseBody)){",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.252Z",
					"updatedAt": "2017-12-07T10:36:30.252Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "c2733dca-357a-2cff-bdac-558dee13ffb7",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_USER_VIEWED_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "RECIPE_USER_VIEWED_FETCH",
					"owner": "833319",
					"folder": "744eb490-2f9f-9a04-0801-d9c373602148",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.212Z",
					"updatedAt": "2017-12-07T10:36:30.212Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "e233632c-21bd-5cb4-f5b3-f789e95925c2",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "LIKE_SUBMIT",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type",
							"value": "REVIEW",
							"type": "text",
							"enabled": true
						},
						{
							"key": "type_id",
							"value": "{{rev_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"isLiked\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "LIKE_SUBMIT(REVIEW)",
					"owner": "833319",
					"folder": "b14e61cc-a794-4351-e874-6eaf25cbde65",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"isLiked\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.186Z",
					"updatedAt": "2017-12-07T10:36:30.186Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "e841e7d3-7ac1-7394-150b-7357dde8745c",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": "postman.setEnvironmentVariable(\"mobile\", randomNumber(10));\r\npostman.setEnvironmentVariable(\"email\", randomString(10)+\"@gmail.com\");\r\npostman.setEnvironmentVariable(\"password\", randomString(10));\r\n\r\nfunction randomString(length) {\r\n  var text = \"\";\r\n  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n\r\nfunction randomNumber(length) {\r\n  var text = \"\";\r\n  var possible = \"0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "USER_REGISTER",
							"type": "text",
							"enabled": true
						},
						{
							"key": "mobile",
							"value": "{{mobile}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "name",
							"value": "Test User",
							"type": "text",
							"enabled": true
						},
						{
							"key": "gender",
							"value": "M",
							"type": "text",
							"enabled": true
						},
						{
							"key": "email",
							"value": "{{email}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"err_message\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nif(isJson(responseBody)){\n    var jsonData = JSON.parse(responseBody);\n    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "USER_REGISTER",
					"owner": "833319",
					"folder": "c06c7498-ab40-9ce5-1906-41e8c8349209",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"mobile\", randomNumber(10));\r",
									"postman.setEnvironmentVariable(\"email\", randomString(10)+\"@gmail.com\");\r",
									"postman.setEnvironmentVariable(\"password\", randomString(10));\r",
									"\r",
									"function randomString(length) {\r",
									"  var text = \"\";\r",
									"  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r",
									"\r",
									"  for (var i = 0; i < length; i++)\r",
									"    text += possible.charAt(Math.floor(Math.random() * possible.length));\r",
									"\r",
									"  return text;\r",
									"}\r",
									"\r",
									"function randomNumber(length) {\r",
									"  var text = \"\";\r",
									"  var possible = \"0123456789\";\r",
									"\r",
									"  for (var i = 0; i < length; i++)\r",
									"    text += possible.charAt(Math.floor(Math.random() * possible.length));\r",
									"\r",
									"  return text;\r",
									"}\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"err_message\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}",
									"",
									"if(isJson(responseBody)){",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"Response has error : expected=false & recieved=\"+jsonData.isError] = jsonData.isError === false;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.253Z",
					"updatedAt": "2017-12-07T10:36:30.253Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "ecfedf24-c639-0597-f369-ffc92827ba59",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "VIEW_RECIPE_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"USER_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "VIEW_RECIPE_FETCH",
					"owner": "833319",
					"folder": "753d2c04-8fb2-997b-4553-e737a8507359",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"USER_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.260Z",
					"updatedAt": "2017-12-07T10:36:30.260Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "f785339d-1fb7-0357-2e6d-1cc4b730f3f3",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "RECIPE_USER_REVIEWED_FETCH",
							"type": "text",
							"enabled": true
						},
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "index",
							"value": "{{DB_INDEX}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"RCP_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "RECIPE_USER_REVIEWED_FETCH",
					"owner": "833319",
					"folder": "744eb490-2f9f-9a04-0801-d9c373602148",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"RCP_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.213Z",
					"updatedAt": "2017-12-07T10:36:30.213Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				},
				{
					"id": "fdabb703-95a6-0132-e322-863a48f28782",
					"headers": "",
					"headerData": [],
					"url": "{{URL}}public/Controller.php",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						{
							"key": "function_key",
							"value": "COMMENT_RECIPE_FETCH_ALL",
							"type": "text",
							"enabled": true
						},
						{
							"key": "rcp_id",
							"value": "{{rcp_id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"tests": "var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));\nvar RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));\nvar STRING = \"USER_ID\";\n\ntests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;\n\ntests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;\n\ntests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);\n\ntests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);\n\nfunction isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}",
					"currentHelper": null,
					"helperAttributes": null,
					"name": "COMMENT_RECIPE_FETCH_ALL",
					"owner": "833319",
					"folder": "886365e4-bf45-6243-4d7d-8eac59e08f5f",
					"lastUpdatedBy": "833319",
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var STATUS_CODE = parseInt(postman.getEnvironmentVariable(\"STATUS_CODE\"));",
									"var RESPONSE_TIME = parseInt(postman.getEnvironmentVariable(\"RESPONSE_TIME_MEDIUM\"));",
									"var STRING = \"USER_ID\";",
									"",
									"tests[\"Status Code : expected=\"+STATUS_CODE+\" & recieved=\"+responseCode.code] = responseCode.code === STATUS_CODE;",
									"",
									"tests[\"Response Time : expected<\"+RESPONSE_TIME+\" & recieved=\"+responseTime] = responseTime < RESPONSE_TIME;",
									"",
									"tests[\"Response in JSON : expected=true & recieved=\"+isJson(responseBody)] = isJson(responseBody);",
									"",
									"tests[\"Response has String(\"+STRING+\") : expected=true & recieved=\"+responseBody.has(STRING)] = responseBody.has(STRING);",
									"",
									"function isJson(str) {",
									"    try {",
									"        JSON.parse(str);",
									"    } catch (e) {",
									"        return false;",
									"    }",
									"    return true;",
									"}"
								]
							}
						}
					],
					"createdAt": "2017-12-07T10:36:30.164Z",
					"updatedAt": "2017-12-07T10:36:30.164Z",
					"responses": [],
					"collectionId": "c860f768-de21-2575-0b48-994cf8441575"
				}
			]
		}
	],
	"environments": [
		{
			"id": "48711395-8e76-7bb0-1dca-e1533fbf87dc",
			"name": "Cookery Environment",
			"values": [
				{
					"enabled": true,
					"key": "RESPONSE_TIME_SHORT",
					"value": "1000",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "RESPONSE_TIME_MEDIUM",
					"value": "5000",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "RESPONSE_TIME_LONG",
					"value": "10000",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "STATUS_CODE",
					"value": "200",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "URL",
					"value": "http://cookery_php-ajitkamathk452607.codeanyapp.com/",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "DB_INDEX",
					"value": "0",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "mobile",
					"value": "9071819562",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "email",
					"value": "Nq2ieecBym@gmail.com",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "password",
					"value": "XgDNiiv4GB",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "user_id",
					"value": "1",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "rcp_id",
					"value": "3",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "com_id",
					"value": "1",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "rev_id",
					"value": "9",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "tmln_id",
					"value": "1",
					"type": "text"
				}
			],
			"team": null,
			"timestamp": 1512644241569
		}
	],
	"headerPresets": [],
	"globals": [
		{
			"key": "variable_key",
			"type": "text",
			"value": "variable_value",
			"enabled": true
		}
	]
}